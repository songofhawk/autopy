{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Autopy \u7b80\u4ecb Autopy\u662f\u4e00\u6b3epython\u7f16\u5199\u7684\u5f00\u6e90RPA\u5de5\u5177\uff08\u5c4f\u5e55\u63a7\u5236\u81ea\u52a8\u5316\uff09\u3002 \u6211\u4eec\u505a\u81ea\u52a8\u5316\u4efb\u52a1\u7684\u65f6\u5019\uff0c\u901a\u5e38\u90fd\u4f1a\u7ecf\u5386\u8fd9\u6837\u51e0\u4e2a\u6b65\u9aa4\uff1a 1. \u68c0\u67e5\u5f53\u524d\u684c\u9762\u4e0a\u662f\u5426\u663e\u793a\u4e86\u9700\u8981\u7684\u9875\u9762\uff08\u6bd4\u5982\u67e5\u770b\u7279\u5b9a\u4f4d\u7f6e\u7684\u56fe\u50cf\uff0c\u6216\u8005\u6bd4\u5bf9OCR\u8bc6\u522b\u51fa\u7684\u6587\u5b57\uff09 2. \u5982\u679c\u786e\u5b9e\u662f\uff0c\u5c31\u6536\u96c6\u4e00\u4e9b\u6587\u5b57\u6216\u56fe\u50cf\u7684\u4fe1\u606f\uff08\u8fd9\u4e00\u6b65\u672a\u5fc5\u4f1a\u6709\uff0c\u8981\u770b\u5177\u4f53\u4efb\u52a1\u7c7b\u578b\uff0c\u6709\u4e9b\u81ea\u52a8\u5316\u53ea\u8981\u628a\u9875\u9762\u6d41\u7a0b\u8d70\u901a\u5c31\u53ef\u4ee5\uff09 3. \u67e5\u627e\u9875\u9762\u4e0a\u7279\u5b9a\u7684\u63a7\u4ef6\uff08\u6bd4\u5982\u67d0\u4e2a\u6309\u94ae\uff09\uff0c\u5bf9\u5b83\u8fdb\u884c\u64cd\u4f5c\uff08\u5982\u70b9\u51fb\uff09 4. \u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u9875\u9762\uff0c\u56de\u5230\u6b65\u9aa41\uff0c\u53cd\u590d\u5faa\u73af\uff0c\u76f4\u5230\u6700\u7ec8\u9875\u9762\u51fa\u73b0 Autopy\u628a\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u62bd\u8c61\u4e3a\u4e00\u4e2a\u72b6\u6001\u673a\u6a21\u578b\uff1a\u6bcf\u4e2a\u9875\u9762\u662f\u4e00\u4e2a\u72b6\u6001\uff08state\uff09\uff0c\u901a\u8fc7\u201caction\u201d\u89e6\u53d1\uff0c\u53ef\u4ee5\u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\uff1b \u5728\u6bcf\u4e00\u4e2aState\u5185\u90e8\uff0c\u53ef\u4ee5\u505acheck\uff08\u68c0\u67e5\u662f\u5426\u9700\u8981\u7684\u9875\u9762\uff09\uff0c\u53ef\u4ee5find\uff08\u67e5\u627e\u7279\u5b9a\u63a7\u4ef6\uff0c\u6216\u8005\u6536\u96c6\u4fe1\u606f\uff09\uff1b \u9488\u5bf9find\u7684\u7ed3\u679c\uff0c\u8fd8\u53ef\u4ee5\u5f62\u6210\u5b50\u72b6\u6001\uff0c\u6765\u5b9e\u73b0\u590d\u6742\u7684\u64cd\u4f5c\u3002 \u6587\u6863\u7ed3\u6784 docs/ index.md # \u9996\u9875 api_reference.md # API\u53c2\u8003\u624b\u518c","title":"\u9996\u9875"},{"location":"#autopy","text":"Autopy\u662f\u4e00\u6b3epython\u7f16\u5199\u7684\u5f00\u6e90RPA\u5de5\u5177\uff08\u5c4f\u5e55\u63a7\u5236\u81ea\u52a8\u5316\uff09\u3002 \u6211\u4eec\u505a\u81ea\u52a8\u5316\u4efb\u52a1\u7684\u65f6\u5019\uff0c\u901a\u5e38\u90fd\u4f1a\u7ecf\u5386\u8fd9\u6837\u51e0\u4e2a\u6b65\u9aa4\uff1a 1. \u68c0\u67e5\u5f53\u524d\u684c\u9762\u4e0a\u662f\u5426\u663e\u793a\u4e86\u9700\u8981\u7684\u9875\u9762\uff08\u6bd4\u5982\u67e5\u770b\u7279\u5b9a\u4f4d\u7f6e\u7684\u56fe\u50cf\uff0c\u6216\u8005\u6bd4\u5bf9OCR\u8bc6\u522b\u51fa\u7684\u6587\u5b57\uff09 2. \u5982\u679c\u786e\u5b9e\u662f\uff0c\u5c31\u6536\u96c6\u4e00\u4e9b\u6587\u5b57\u6216\u56fe\u50cf\u7684\u4fe1\u606f\uff08\u8fd9\u4e00\u6b65\u672a\u5fc5\u4f1a\u6709\uff0c\u8981\u770b\u5177\u4f53\u4efb\u52a1\u7c7b\u578b\uff0c\u6709\u4e9b\u81ea\u52a8\u5316\u53ea\u8981\u628a\u9875\u9762\u6d41\u7a0b\u8d70\u901a\u5c31\u53ef\u4ee5\uff09 3. \u67e5\u627e\u9875\u9762\u4e0a\u7279\u5b9a\u7684\u63a7\u4ef6\uff08\u6bd4\u5982\u67d0\u4e2a\u6309\u94ae\uff09\uff0c\u5bf9\u5b83\u8fdb\u884c\u64cd\u4f5c\uff08\u5982\u70b9\u51fb\uff09 4. \u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u9875\u9762\uff0c\u56de\u5230\u6b65\u9aa41\uff0c\u53cd\u590d\u5faa\u73af\uff0c\u76f4\u5230\u6700\u7ec8\u9875\u9762\u51fa\u73b0 Autopy\u628a\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u62bd\u8c61\u4e3a\u4e00\u4e2a\u72b6\u6001\u673a\u6a21\u578b\uff1a\u6bcf\u4e2a\u9875\u9762\u662f\u4e00\u4e2a\u72b6\u6001\uff08state\uff09\uff0c\u901a\u8fc7\u201caction\u201d\u89e6\u53d1\uff0c\u53ef\u4ee5\u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\uff1b \u5728\u6bcf\u4e00\u4e2aState\u5185\u90e8\uff0c\u53ef\u4ee5\u505acheck\uff08\u68c0\u67e5\u662f\u5426\u9700\u8981\u7684\u9875\u9762\uff09\uff0c\u53ef\u4ee5find\uff08\u67e5\u627e\u7279\u5b9a\u63a7\u4ef6\uff0c\u6216\u8005\u6536\u96c6\u4fe1\u606f\uff09\uff1b \u9488\u5bf9find\u7684\u7ed3\u679c\uff0c\u8fd8\u53ef\u4ee5\u5f62\u6210\u5b50\u72b6\u6001\uff0c\u6765\u5b9e\u73b0\u590d\u6742\u7684\u64cd\u4f5c\u3002","title":"Autopy \u7b80\u4ecb"},{"location":"#_1","text":"docs/ index.md # \u9996\u9875 api_reference.md # API\u53c2\u8003\u624b\u518c","title":"\u6587\u6863\u7ed3\u6784"},{"location":"api_reference/","text":"Autopy \u53c2\u8003\u624b\u518c core special action special ActionClipboard ActionClipboard \u526a\u8d34\u677f\u76f8\u5173\u64cd\u4f5c copy ( str_to_copy ) classmethod \u590d\u5236\u6307\u5b9a\u5b57\u7b26\u4e32\u5230\u526a\u8d34\u677f Parameters: str_to_copy: \u8981\u590d\u5236\u7684\u5b57\u7b26\u4e32 Returns: None Source code in autopy\\core\\action\\actionclipboard.py @classmethod def copy ( cls , str_to_copy ): \"\"\" \u590d\u5236\u6307\u5b9a\u5b57\u7b26\u4e32\u5230\u526a\u8d34\u677f Args: str_to_copy: \u8981\u590d\u5236\u7684\u5b57\u7b26\u4e32 Returns: None \"\"\" pyperclip . copy ( str_to_copy ) paste () classmethod \u63d0\u53d6\u5f53\u524d\u526a\u8d34\u677f\u4e2d\u7684\u6587\u672c\uff0c\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fd4\u56de Returns: str \u2013 \u5f53\u524d\u526a\u8d34\u677f\u4e2d\u7684\u6587\u672c\u5b57\u7b26\u4e32 Source code in autopy\\core\\action\\actionclipboard.py @classmethod def paste ( cls ): \"\"\" \u63d0\u53d6\u5f53\u524d\u526a\u8d34\u677f\u4e2d\u7684\u6587\u672c\uff0c\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fd4\u56de Returns: str: \u5f53\u524d\u526a\u8d34\u677f\u4e2d\u7684\u6587\u672c\u5b57\u7b26\u4e32 \"\"\" pyperclip . paste () ActionError ActionError \u5f02\u5e38\u5904\u7406\u76f8\u5173\u65b9\u6cd5 locate_state ( params ) staticmethod \u8fd9\u4e2a\u65b9\u6cd5\u7684\u610f\u601d\uff0c\u91cd\u65b0\u67e5\u627e\u5f53\u524d\u754c\u9762\u5904\u4e8e\u54ea\u4e2a\u72b6\u6001\uff0c\u4f46\u662f\u771f\u6b63\u7684\u67e5\u627e\u903b\u8f91\u662f\u5728Executor\u4e2d\uff0c\u8fd9\u91cc\u53ea\u662f\u8f93\u51fa\u4e00\u4e0b Parameters: params: tuple \u2013 \u5b9a\u4f4d\u5f53\u524d\u754c\u9762\u6240\u5c5e\u72b6\u6001\u524d\uff0c\u8981\u8f93\u51fa\u7684\u5185\u5bb9 Returns: None Source code in autopy\\core\\action\\actionerror.py @staticmethod def locate_state ( params : tuple ): \"\"\" \u8fd9\u4e2a\u65b9\u6cd5\u7684\u610f\u601d\uff0c\u91cd\u65b0\u67e5\u627e\u5f53\u524d\u754c\u9762\u5904\u4e8e\u54ea\u4e2a\u72b6\u6001\uff0c\u4f46\u662f\u771f\u6b63\u7684\u67e5\u627e\u903b\u8f91\u662f\u5728Executor\u4e2d\uff0c\u8fd9\u91cc\u53ea\u662f\u8f93\u51fa\u4e00\u4e0b Args: params: \u5b9a\u4f4d\u5f53\u524d\u754c\u9762\u6240\u5c5e\u72b6\u6001\u524d\uff0c\u8981\u8f93\u51fa\u7684\u5185\u5bb9 Returns: None \"\"\" ( msg ) = params print ( \"ERROR: {} \" . format ( msg )) trigger ( params ) staticmethod \u4e3b\u52a8\u89e6\u53d1\u4e00\u4e2a\u8fd0\u884c\u65f6\u5f02\u5e38 Parameters: params: tuple \u2013 \u8981\u89e6\u53d1\u7684\u5f02\u5e38\u5185\u5bb9 Returns: None Source code in autopy\\core\\action\\actionerror.py @staticmethod def trigger ( params : tuple ): \"\"\" \u4e3b\u52a8\u89e6\u53d1\u4e00\u4e2a\u8fd0\u884c\u65f6\u5f02\u5e38 Args: params: \u8981\u89e6\u53d1\u7684\u5f02\u5e38\u5185\u5bb9 Returns: None \"\"\" ( msg ) = params # print(\"ERROR: {}\".format(msg)) raise RuntimeError ( msg ) ActionImage ActionImage \u56fe\u50cf\u5904\u7406\u64cd\u4f5c\u7c7b load_from_file ( image_path ) classmethod \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u56fe\u7247\uff0c\u8fd4\u56deopencv\u683c\u5f0f\u7684\u53d8\u91cf Parameters: image_path: str \u2013 \u56fe\u7247\u8def\u5f84\uff0c\u6682\u65f6\u4ec5\u652f\u63018\u4f4d\u989c\u8272\u6df1\u5ea6 Returns: opencv\u683c\u5f0f\u7684\u56fe\u7247\u53d8\u91cf Source code in autopy\\core\\action\\actionimage.py @classmethod def load_from_file ( cls , image_path ): \"\"\" \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u56fe\u7247\uff0c\u8fd4\u56deopencv\u683c\u5f0f\u7684\u53d8\u91cf Args: image_path (str): \u56fe\u7247\u8def\u5f84\uff0c\u6682\u65f6\u4ec5\u652f\u63018\u4f4d\u989c\u8272\u6df1\u5ea6 Returns: opencv\u683c\u5f0f\u7684\u56fe\u7247\u53d8\u91cf \"\"\" return cv2 . imdecode ( np . fromfile ( image_path , dtype = np . uint8 ), - 1 ) ocr ( cv_image , rect = None ) classmethod \u4ece\u6307\u5b9a\u56fe\u7247\u7684\u7279\u5b9a\u4f4d\u7f6e\u4e2d\u63d0\u53d6\u6587\u672c\u5b57\u7b26\u4e32 Parameters: cv_image: numpy \u2013 \u56fe\u7247\u53d8\u91cf\uff0c\u8981\u6c42\u662fopencv\u683c\u5f0f\u7684 rect: \u56fe\u7247\u4e2d\u7684\u4f4d\u7f6e Source code in autopy\\core\\action\\actionimage.py @classmethod def ocr ( cls , cv_image , rect = None ): \"\"\" \u4ece\u6307\u5b9a\u56fe\u7247\u7684\u7279\u5b9a\u4f4d\u7f6e\u4e2d\u63d0\u53d6\u6587\u672c\u5b57\u7b26\u4e32 Args: cv_image (numpy): \u56fe\u7247\u53d8\u91cf\uff0c\u8981\u6c42\u662fopencv\u683c\u5f0f\u7684 rect: \u56fe\u7247\u4e2d\u7684\u4f4d\u7f6e Returns: \"\"\" if rect is not None : cv_image = cv_image [ rect . top : rect . bottom , rect . left : rect . right ] cv_image_gray = cv2 . cvtColor ( cv_image , cv2 . COLOR_BGR2GRAY ) img_high_contrast = cls . grayscale_linear_transformation ( cv_image_gray , 0 , 255 ) res_chars = cls . cnocr . ocr_for_single_line ( img_high_contrast ) if len ( res_chars ) == 0 : return '' else : result = '' . join ( list ( map ( str , res_chars ))) return result pil_to_cv ( pil_image ) classmethod \u628aPillow(PIL)\u683c\u5f0f\u7684\u56fe\u7247\uff0c\u8f6c\u6362\u6210opencv\u683c\u5f0f\u7684\u56fe\u7247\u3002 \u4e24\u8005\u7684\u5dee\u522b\u5728\u4e8e\uff0c\u9996\u5148PIL\u652f\u6301\u66f4\u4e30\u5bcc\u7684\u56fe\u7247\u8868\u8fbe\u65b9\u5f0f\uff0c\u4e0d\u4e00\u5b9a\u4f7f\u7528RGB\u8868\u8fbe\uff0c\u8fd8\u53ef\u4ee5\u7528HSV\u6216\u8005\u5176\u4ed6\u5f62\u5f0f\uff1b \u4f46opencv\u4e00\u5b9a\u7528\u7ea2\u7eff\u84dd\u4e09\u539f\u8272\u7ec4\u5408\uff0c\u800c\u4e14\u8fd8\u522b\u51fa\u5fc3\u88c1\u5730\u4f7f\u7528\u4e86BGR\u8fd9\u4e2a\u987a\u5e8f\uff0c\u800c\u4e0d\u662f\u901a\u5e38\u7684RGB\u3002 Parameters: pil_image: PIL\u683c\u5f0f\u7684\u56fe\u7247 Returns: opencv\u683c\u5f0f\u7684\u56fe\u7247 Source code in autopy\\core\\action\\actionimage.py @classmethod def pil_to_cv ( cls , pil_image ): \"\"\" \u628aPillow(PIL)\u683c\u5f0f\u7684\u56fe\u7247\uff0c\u8f6c\u6362\u6210opencv\u683c\u5f0f\u7684\u56fe\u7247\u3002 \u4e24\u8005\u7684\u5dee\u522b\u5728\u4e8e\uff0c\u9996\u5148PIL\u652f\u6301\u66f4\u4e30\u5bcc\u7684\u56fe\u7247\u8868\u8fbe\u65b9\u5f0f\uff0c\u4e0d\u4e00\u5b9a\u4f7f\u7528RGB\u8868\u8fbe\uff0c\u8fd8\u53ef\u4ee5\u7528HSV\u6216\u8005\u5176\u4ed6\u5f62\u5f0f\uff1b \u4f46opencv\u4e00\u5b9a\u7528\u7ea2\u7eff\u84dd\u4e09\u539f\u8272\u7ec4\u5408\uff0c\u800c\u4e14\u8fd8\u522b\u51fa\u5fc3\u88c1\u5730\u4f7f\u7528\u4e86BGR\u8fd9\u4e2a\u987a\u5e8f\uff0c\u800c\u4e0d\u662f\u901a\u5e38\u7684RGB\u3002 Args: pil_image: PIL\u683c\u5f0f\u7684\u56fe\u7247 Returns: opencv\u683c\u5f0f\u7684\u56fe\u7247 \"\"\" img_tmp = pil_image . convert ( 'RGB' ) cv_rgb = np . array ( img_tmp ) return cv2 . cvtColor ( cv_rgb , cv2 . COLOR_RGB2BGR ) ActionKeyboard ActionKeyboard \u952e\u76d8\u64cd\u4f5c hotkey ( * keys ) staticmethod \u53d1\u9001\u70ed\u952e Examples: action: hotkey(\"ctrl\",\"c\") action: hotkey(\"alt\",\"tab\") Parameters: *keys: \u70ed\u952e\u7ec4\u5408\uff0c\u591a\u952e\u7ec4\u5408\u7528\u591a\u4e2a\u53c2\u6570\u8868\u793a Returns: None Source code in autopy\\core\\action\\actionkeyboard.py @staticmethod def hotkey ( * keys ): \"\"\" \u53d1\u9001\u70ed\u952e Examples: ```python action: hotkey(\"ctrl\",\"c\") ``` ```python action: hotkey(\"alt\",\"tab\") ``` Args: *keys: \u70ed\u952e\u7ec4\u5408\uff0c\u591a\u952e\u7ec4\u5408\u7528\u591a\u4e2a\u53c2\u6570\u8868\u793a Returns: None \"\"\" pyautogui . hotkey ( * keys ) press ( key_or_keys , interval = 0 ) staticmethod \u70b9\u51fb\u7279\u5b9a\u7684\u952e Parameters: key_or_keys: str,List[str] \u2013 \u8868\u793a\u952e\u7684\u5b57\u7b26\u4e32\u6216\u8005\u5b57\u7b26\u4e32\u6570\u7ec4 interval: float \u2013 \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u7ec4\uff0c\u90a3\u4e48\u8fd9\u91cc\u8868\u793a\u591a\u4e2a\u6572\u51fb\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u662f\u79d2 Source code in autopy\\core\\action\\actionkeyboard.py @staticmethod def press ( key_or_keys , interval = 0 ): \"\"\" \u70b9\u51fb\u7279\u5b9a\u7684\u952e Args: key_or_keys (str,List[str]): \u8868\u793a\u952e\u7684\u5b57\u7b26\u4e32\u6216\u8005\u5b57\u7b26\u4e32\u6570\u7ec4 interval (float): \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u7ec4\uff0c\u90a3\u4e48\u8fd9\u91cc\u8868\u793a\u591a\u4e2a\u6572\u51fb\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u662f\u79d2 Returns: \"\"\" if interval == 0 : pyautogui . press ( key_or_keys ) else : pyautogui . press ( key_or_keys , interval ) type ( str_to_type , interval = 0 ) staticmethod \u628a\u6307\u5b9a\u5b57\u7b26\u4e32\u4ee5\u952e\u76d8\u6572\u51fb\u7684\u5f62\u5f0f\u8f93\u5165 Parameters: str_to_type: str \u2013 \u8981\u8f93\u5165\u7684\u5b57\u7b26\u4e32 interval: float \u2013 \u6bcf\u4e2a\u8f93\u5165\u5b57\u7b26\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u662f\u79d2 Returns: None Source code in autopy\\core\\action\\actionkeyboard.py @staticmethod def type ( str_to_type , interval = 0 ): \"\"\" \u628a\u6307\u5b9a\u5b57\u7b26\u4e32\u4ee5\u952e\u76d8\u6572\u51fb\u7684\u5f62\u5f0f\u8f93\u5165 Args: str_to_type (str): \u8981\u8f93\u5165\u7684\u5b57\u7b26\u4e32 interval (float): \u6bcf\u4e2a\u8f93\u5165\u5b57\u7b26\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u662f\u79d2 Returns: None \"\"\" if interval == 0 : pyautogui . write ( str_to_type ) else : pyautogui . write ( str_to_type , interval ) ActionMouse MousePosition \u8868\u793a\u9f20\u6807\u4f4d\u7f6e\u7684\u6570\u636e\u7ed3\u6784 Attributes: Name Type Description x int x\u5750\u6807 y int y\u5750\u6807 click ( x , y ) \u9f20\u6807\u70b9\u51fb\uff0c\u53ef\u4ee5\u6307\u5b9a\u70b9\u51fb\u7684\u4f4d\u7f6e Parameters: x: int \u2013 x\u5750\u6807 y: int \u2013 y\u5750\u6807 Returns: None Source code in autopy\\core\\action\\actionmouse.py def click ( x , y ): \"\"\" \u9f20\u6807\u70b9\u51fb\uff0c\u53ef\u4ee5\u6307\u5b9a\u70b9\u51fb\u7684\u4f4d\u7f6e Args: x (int): x\u5750\u6807 y (int): y\u5750\u6807 Returns: None \"\"\" pyautogui . click ( int ( x ), int ( y )) dbclick ( x , y ) \u9f20\u6807\u53cc\u51fb\uff0c\u53ef\u4ee5\u6307\u5b9a\u70b9\u51fb\u7684\u4f4d\u7f6e Parameters: x: int \u2013 x\u5750\u6807 y: int \u2013 y\u5750\u6807 Returns: None Source code in autopy\\core\\action\\actionmouse.py def dbclick ( x , y ): \"\"\" \u9f20\u6807\u53cc\u51fb\uff0c\u53ef\u4ee5\u6307\u5b9a\u70b9\u51fb\u7684\u4f4d\u7f6e Args: x (int): x\u5750\u6807 y (int): y\u5750\u6807 Returns: None \"\"\" pyautogui . doubleClick ( int ( x ), int ( y )) drag ( x , y ) \u9f20\u6807\u4ece\u5f53\u524d\u4f4d\u7f6e\uff0c\u62d6\u62fd\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e Parameters: x: int \u2013 \u76ee\u6807\u4f4d\u7f6ex\u5750\u6807 y: int \u2013 \u76ee\u6807\u4f4d\u7f6ey\u5750\u6807 Returns: None Source code in autopy\\core\\action\\actionmouse.py def drag ( x , y ): \"\"\" \u9f20\u6807\u4ece\u5f53\u524d\u4f4d\u7f6e\uff0c\u62d6\u62fd\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e Args: x (int): \u76ee\u6807\u4f4d\u7f6ex\u5750\u6807 y (int): \u76ee\u6807\u4f4d\u7f6ey\u5750\u6807 Returns: None \"\"\" pyautogui . dragTo ( int ( x ), int ( y ), 0.5 ) move ( x , y ) \u79fb\u52a8\u9f20\u6807\u6307\u9488\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e Parameters: x: int \u2013 x\u5750\u6807 y: int \u2013 y\u5750\u6807 Returns: None Source code in autopy\\core\\action\\actionmouse.py def move ( x , y ): \"\"\" \u79fb\u52a8\u9f20\u6807\u6307\u9488\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e Args: x (int): x\u5750\u6807 y (int): y\u5750\u6807 Returns: None \"\"\" pyautogui . moveTo ( int ( x ), int ( y ), duration = 0.25 ) position () \u83b7\u53d6\u9f20\u6807\u5f53\u524d\u4f4d\u7f6e Returns: MousePosition\u5bf9\u8c61\uff0c\u6709x,y\u4e24\u4e2a\u5c5e\u6027 Source code in autopy\\core\\action\\actionmouse.py def position (): \"\"\" \u83b7\u53d6\u9f20\u6807\u5f53\u524d\u4f4d\u7f6e Returns: MousePosition\u5bf9\u8c61\uff0c\u6709x,y\u4e24\u4e2a\u5c5e\u6027 \"\"\" pos = pyautogui . position () return MousePosition ( pos [ 0 ], pos [ 1 ]) rightclick ( x , y ) \u9f20\u6807\u53f3\u952e\u70b9\u51fb\uff0c\u53ef\u4ee5\u6307\u5b9a\u70b9\u51fb\u7684\u4f4d\u7f6e Parameters: x: int \u2013 x\u5750\u6807 y: int \u2013 y\u5750\u6807 Returns: None Source code in autopy\\core\\action\\actionmouse.py def rightclick ( x , y ): \"\"\" \u9f20\u6807\u53f3\u952e\u70b9\u51fb\uff0c\u53ef\u4ee5\u6307\u5b9a\u70b9\u51fb\u7684\u4f4d\u7f6e Args: x (int): x\u5750\u6807 y (int): y\u5750\u6807 Returns: None \"\"\" pyautogui . rightClick ( int ( x ), int ( y )) scroll ( clicks ) \u9f20\u6807\u6eda\u8f6e\u6eda\u52a8\u6307\u5b9a\u7684\u8ddd\u79bb Parameters: clicks: int \u2013 \u6eda\u52a8\u7684\u683c\u6570\uff0c\u6b63\u6570\u8868\u793a\u6eda\u52a8\u6761\u5411\u4e0a\uff0c\u8d1f\u6570\u8868\u793a\u6eda\u52a8\u6761\u5411\u4e0b Returns: None Source code in autopy\\core\\action\\actionmouse.py def scroll ( clicks ): \"\"\" \u9f20\u6807\u6eda\u8f6e\u6eda\u52a8\u6307\u5b9a\u7684\u8ddd\u79bb Args: clicks (int): \u6eda\u52a8\u7684\u683c\u6570\uff0c\u6b63\u6570\u8868\u793a\u6eda\u52a8\u6761\u5411\u4e0a\uff0c\u8d1f\u6570\u8868\u793a\u6eda\u52a8\u6761\u5411\u4e0b Returns: None \"\"\" pyautogui . scroll ( clicks ) ActionScreen ActionScreen change_resolution ( params ) staticmethod \u6539\u53d8\u5c4f\u5e55\u5206\u8fa8\u7387 Parameters: params: Tuple[int,int] \u2013 \u6307\u5b9a\u5206\u8fa8\u7387\u7684\u5bbd\u548c\u9ad8 Returns: None Source code in autopy\\core\\action\\actionscreen.py @staticmethod def change_resolution ( params : tuple ): \"\"\" \u6539\u53d8\u5c4f\u5e55\u5206\u8fa8\u7387 Args: params (Tuple[int,int]): \u6307\u5b9a\u5206\u8fa8\u7387\u7684\u5bbd\u548c\u9ad8 Returns: None \"\"\" ( width , height ) = params dm = win32api . EnumDisplaySettings ( None , 0 ) dm . PelsWidth = width dm . PelsHeight = height dm . BitsPerPel = 32 dm . DisplayFixedOutput = 1 # 0:\u7f3a\u7701; 1:\u5c45\u4e2d; 2:\u62c9\u4f38 win32api . ChangeDisplaySettings ( dm , 0 ) pick_color ( x , y ) staticmethod \u83b7\u53d6\u5c4f\u5e55\u4e0a\u6307\u5b9a\u4f4d\u7f6e\u50cf\u7d20\u7684\u989c\u8272 Parameters: x: \u6307\u5b9a\u4f4d\u7f6ex\u5750\u6807 y: \u6307\u5b9a\u4f4d\u7f6ey\u5750\u6807 Returns: List[int] \u2013 \u957f\u5ea6\u4e3a4\u7684\u6574\u5f62\u6570\u7ec4\uff0c\u5206\u522b\u75280~255\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u8868\u793aR,G,B,A\u56db\u4e2a\u901a\u9053 Source code in autopy\\core\\action\\actionscreen.py @staticmethod def pick_color ( x , y ): \"\"\" \u83b7\u53d6\u5c4f\u5e55\u4e0a\u6307\u5b9a\u4f4d\u7f6e\u50cf\u7d20\u7684\u989c\u8272 Args: x: \u6307\u5b9a\u4f4d\u7f6ex\u5750\u6807 y: \u6307\u5b9a\u4f4d\u7f6ey\u5750\u6807 Returns: List[int]: \u957f\u5ea6\u4e3a4\u7684\u6574\u5f62\u6570\u7ec4\uff0c\u5206\u522b\u75280~255\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u8868\u793aR,G,B,A\u56db\u4e2a\u901a\u9053 \"\"\" return autogui . pixel ( x , y ) pixel_matches_color ( x , y , color_tuple , tolerance = 0 ) staticmethod \u68c0\u67e5\u7ed9\u5b9a\u7684\u989c\u8272\u548c\u5c4f\u5e55\u4e0a\u7279\u5b9a\u5750\u6807\u70b9\u7684\u989c\u8272\u662f\u5426\u5339\u914d Parameters: x: \u6307\u5b9a\u4f4d\u7f6ex\u5750\u6807 y: \u6307\u5b9a\u4f4d\u7f6ey\u5750\u6807 color_tuple: Tuple[int] \u2013 (R,G,B) \u7ec4\u6210\u7684\u989c\u8272\u503c tolerance: \u5bb9\u5fcd\u5ea6 Returns: bool \u2013 \u662f\u5426\u5339\u914d Source code in autopy\\core\\action\\actionscreen.py @staticmethod def pixel_matches_color ( x , y , color_tuple , tolerance = 0 ): \"\"\" \u68c0\u67e5\u7ed9\u5b9a\u7684\u989c\u8272\u548c\u5c4f\u5e55\u4e0a\u7279\u5b9a\u5750\u6807\u70b9\u7684\u989c\u8272\u662f\u5426\u5339\u914d Args: x: \u6307\u5b9a\u4f4d\u7f6ex\u5750\u6807 y: \u6307\u5b9a\u4f4d\u7f6ey\u5750\u6807 color_tuple (Tuple[int]): (R,G,B) \u7ec4\u6210\u7684\u989c\u8272\u503c tolerance: \u5bb9\u5fcd\u5ea6 Returns: bool: \u662f\u5426\u5339\u914d \"\"\" return autogui . pixelMatchesColor ( x , y , color_tuple , tolerance ) snapshot ( rect ) classmethod \u6839\u636e\u8ddf\u5b9a\u7684ScreenRect\u533a\u57df\u622a\u56fe Parameters: rect: \u9075\u4ece\u4e00\u822c\u7cfb\u7edf\u5750\u6807\u7cfb\u7684\u77e9\u5f62\u533a\u57df(\u5de6\u4e0a\u89d2\u4e3a0,0\u70b9), autogui\u548cPillow\u90fd\u9002\u7528 Returns: \u8fd4\u56dePIL\u683c\u5f0f\u7684\u6307\u5b9a\u533a\u57df\u622a\u56fe Source code in autopy\\core\\action\\actionscreen.py @classmethod def snapshot ( cls , rect ): \"\"\" \u6839\u636e\u8ddf\u5b9a\u7684ScreenRect\u533a\u57df\u622a\u56fe Args: rect: \u9075\u4ece\u4e00\u822c\u7cfb\u7edf\u5750\u6807\u7cfb\u7684\u77e9\u5f62\u533a\u57df(\u5de6\u4e0a\u89d2\u4e3a0,0\u70b9), autogui\u548cPillow\u90fd\u9002\u7528 Returns: \u8fd4\u56dePIL\u683c\u5f0f\u7684\u6307\u5b9a\u533a\u57df\u622a\u56fe \"\"\" screen_shot = autogui . screenshot () # rect = rect.swap_top_bottom() crop_img = screen_shot . crop ( ( int ( float ( rect . left )), int ( float ( rect . top )), int ( float ( rect . right )), int ( float ( rect . bottom )))) return crop_img snapshot_cv ( rect ) classmethod \u6839\u636e\u8ddf\u5b9a\u7684ScreenRect\u533a\u57df\u622a\u56fe Parameters: rect: \u9075\u4ece\u4e00\u822c\u7cfb\u7edf\u5750\u6807\u7cfb\u7684\u77e9\u5f62\u533a\u57df(\u5de6\u4e0a\u89d2\u4e3a0,0\u70b9), autogui\u548copencv\u90fd\u9002\u7528 Returns: \u8fd4\u56deopencv\u683c\u5f0f\u7684\u6307\u5b9a\u533a\u57df\u622a\u56fe Source code in autopy\\core\\action\\actionscreen.py @classmethod def snapshot_cv ( cls , rect ): \"\"\" \u6839\u636e\u8ddf\u5b9a\u7684ScreenRect\u533a\u57df\u622a\u56fe Args: rect: \u9075\u4ece\u4e00\u822c\u7cfb\u7edf\u5750\u6807\u7cfb\u7684\u77e9\u5f62\u533a\u57df(\u5de6\u4e0a\u89d2\u4e3a0,0\u70b9), autogui\u548copencv\u90fd\u9002\u7528 Returns: \u8fd4\u56deopencv\u683c\u5f0f\u7684\u6307\u5b9a\u533a\u57df\u622a\u56fe \"\"\" pil_image = cls . snapshot ( rect ) return ActionImage . pil_to_cv ( pil_image ) ActionWindow ActionWindow find_window ( title = None , win_class = None ) classmethod \u6839\u636e\u7a97\u53e3\u7684class_name\u6216\u8005\u6807\u9898\uff0c\u67e5\u627e\u7a97\u53e3 Parameters: title: str \u2013 \u7a97\u53e3\u6807\u9898 win_class: str \u2013 \u7a97\u53e3class_name Returns: int,None \u2013 \u627e\u5230\u7684\u7a97\u53e3\u53e5\u67c4\uff08hwnd\uff09\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5219\u8fd4\u56deNone Source code in autopy\\core\\action\\actionwindow.py @classmethod def find_window ( cls , title = None , win_class = None ): \"\"\" \u6839\u636e\u7a97\u53e3\u7684class_name\u6216\u8005\u6807\u9898\uff0c\u67e5\u627e\u7a97\u53e3 Args: title (str): \u7a97\u53e3\u6807\u9898 win_class (str): \u7a97\u53e3class_name Returns: int,None: \u627e\u5230\u7684\u7a97\u53e3\u53e5\u67c4\uff08hwnd\uff09\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5219\u8fd4\u56deNone \"\"\" try : return win32gui . FindWindow ( win_class , title ) except Exception as ex : print ( 'error calling win32gui.FindWindow ' + str ( ex )) return None get_current_window () classmethod \u83b7\u53d6\u5f53\u524d\u7a97\u53e3\u53e5\u67c4 Returns: int \u2013 \u5f53\u524d\u7a97\u53e3\u53e5\u67c4\uff08hwnd\uff09 Source code in autopy\\core\\action\\actionwindow.py @classmethod def get_current_window ( cls ): \"\"\" \u83b7\u53d6\u5f53\u524d\u7a97\u53e3\u53e5\u67c4 Returns: int: \u5f53\u524d\u7a97\u53e3\u53e5\u67c4\uff08hwnd\uff09 \"\"\" return win32gui . GetForegroundWindow () get_current_window_title () classmethod \u83b7\u53d6\u5f53\u524d\u7a97\u53e3\u6807\u9898 Returns: str \u2013 \u7a97\u53e3\u6807\u9898 Source code in autopy\\core\\action\\actionwindow.py @classmethod def get_current_window_title ( cls ): \"\"\" \u83b7\u53d6\u5f53\u524d\u7a97\u53e3\u6807\u9898 Returns: str: \u7a97\u53e3\u6807\u9898 \"\"\" return cls . get_window_title ( cls . get_current_window ()) get_window_class ( hwnd ) classmethod \u83b7\u53d6\u6307\u5b9a\u7a97\u53e3\u7684class name Parameters: hwnd: int \u2013 \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 Returns: str \u2013 \u7a97\u53e3class name(windows api\u4e2d\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u770b\u505awindow\u7cfb\u7edf\u5185\u90e8\u5bf9\u7a97\u53e3\u7684\u6807\u8bc6\u540d\uff09 Source code in autopy\\core\\action\\actionwindow.py @classmethod def get_window_class ( cls , hwnd ): \"\"\" \u83b7\u53d6\u6307\u5b9a\u7a97\u53e3\u7684class name Args: hwnd (int): \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 Returns: str: \u7a97\u53e3class name(windows api\u4e2d\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u770b\u505awindow\u7cfb\u7edf\u5185\u90e8\u5bf9\u7a97\u53e3\u7684\u6807\u8bc6\u540d\uff09 \"\"\" return win32gui . GetClassName ( hwnd ) get_window_rect ( hwnd ) classmethod \u83b7\u53d6\u6307\u5b9a\u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f Parameters: hwnd: int \u2013 \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 Returns: ScreenRect \u2013 \u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f Source code in autopy\\core\\action\\actionwindow.py @classmethod def get_window_rect ( cls , hwnd ): \"\"\" \u83b7\u53d6\u6307\u5b9a\u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f Args: hwnd (int): \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 Returns: ScreenRect: \u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f \"\"\" left , top , right , bottom = win32gui . GetWindowRect ( hwnd ) return ScreenRect ( left , right , top , bottom ) get_window_title ( hwnd ) classmethod \u83b7\u53d6\u6307\u5b9a\u7a97\u53e3\u6807\u9898 Parameters: hwnd: int \u2013 \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 Returns: str \u2013 \u7a97\u53e3\u6807\u9898 Source code in autopy\\core\\action\\actionwindow.py @classmethod def get_window_title ( cls , hwnd ): \"\"\" \u83b7\u53d6\u6307\u5b9a\u7a97\u53e3\u6807\u9898 Args: hwnd (int): \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 Returns: str: \u7a97\u53e3\u6807\u9898 \"\"\" return win32gui . GetWindowText ( hwnd ) set_current_window ( hwnd ) classmethod \u5c06\u6307\u5b9a\u7684\u7a97\u53e3\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7a97\u53e3 Parameters: hwnd: int \u2013 \u6307\u5b9a\u7684\u7a97\u53e3\u53e5\u67c4 Returns: None Source code in autopy\\core\\action\\actionwindow.py @classmethod def set_current_window ( cls , hwnd ): \"\"\" \u5c06\u6307\u5b9a\u7684\u7a97\u53e3\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7a97\u53e3 Args: hwnd (int): \u6307\u5b9a\u7684\u7a97\u53e3\u53e5\u67c4 Returns: None \"\"\" if win32gui . IsIconic ( hwnd ): # \u5982\u679c\u7a97\u53e3\u88ab\u6700\u5c0f\u5316\u4e86\uff0c\u5148\u6062\u590d win32gui . ShowWindow ( hwnd , win32con . SW_RESTORE ) win32gui . SetForegroundWindow ( hwnd ) set_window_pos ( hwnd , x , y , width , height ) classmethod \u8bbe\u7f6e\u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f Parameters: hwnd: int \u2013 \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 x: int \u2013 \u7a97\u53e3\u5de6\u4e0a\u89d2x\u5750\u6807 (int): \u7a97\u53e3\u5de6\u4e0a\u89d2y\u5750\u6807 width: int \u2013 \u7a97\u53e3\u5bbd\u5ea6 height: int \u2013 \u7a97\u5bbd\u9ad8\u5ea6 Source code in autopy\\core\\action\\actionwindow.py @classmethod def set_window_pos ( cls , hwnd , x , y , width , height ): \"\"\" \u8bbe\u7f6e\u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f Args: hwnd (int): \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 x (int): \u7a97\u53e3\u5de6\u4e0a\u89d2x\u5750\u6807 (int): \u7a97\u53e3\u5de6\u4e0a\u89d2y\u5750\u6807 width (int): \u7a97\u53e3\u5bbd\u5ea6 height (int): \u7a97\u5bbd\u9ad8\u5ea6 Returns: \"\"\" win32gui . SetWindowPos ( hwnd , win32con . HWND_TOPMOST , x , y , width , height , win32con . SWP_SHOWWINDOW ) data special Action Action \u6267\u884c\u64cd\u4f5c\u57fa\u7840\u7c7b\uff0c\u6709Evaluation\u548cExecution\u4e24\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u5bf9\u5e94\u6709\u8fd4\u56de\u7ed3\u679c\u548c\u6ca1\u6709\u8fd4\u56de\u7ed3\u679c\u7684\u64cd\u4f5c\u3002\u5728\u672c\u57fa\u7840\u7c7b\u4e2d\uff0c\u8fd8\u5b9a\u4e49\u4e86\u6240\u6709\u5177\u4f53\u7684\u64cd\u4f5c\u65b9\u6cd5\u540d\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u5728Action\u7c7b\u578b\u7684\u914d\u7f6e\u8282\u70b9\u4e2d\u76f4\u63a5\u8c03\u7528\u3002\u5177\u4f53\u7684\u53c2\u6570\u4f1a\u5728\u5bf9\u5e94\u7684\u7c7b\u4e2d\u4ecb\u7ecd Attributes: Name Type Description move ActionMouse.move \u79fb\u52a8\u9f20\u6807\uff0c\u4f8b\u5982 move(354,267) raise_error ActionError.trigger \u5f15\u53d1\u5f02\u5e38\uff0c\u4f8b\u5982raise_error('\u9489\u9489\u4e0d\u662f\u5f53\u524d\u9875\u9762') click ActionMouse.click \u70b9\u51fb\u9f20\u6807\uff0c\u4f8b\u5982 click(354,267)\uff0cclick\u6267\u884c\u7684\u65f6\u5019\uff0c\u9f20\u6807\u6307\u9488\u4e5f\u4f1a\u88ab\u79fb\u52a8\u5230\u6307\u5b9a\u4f4d\u7f6e dbclick ActionMouse.dbclick \u53cc\u51fb\u9f20\u6807\uff0c\u4f8b\u5982 dbclick(354,267) rightclick ActionMouse.rightclick \u53f3\u952e\u70b9\u51fb\u9f20\u6807\uff0c\u4f8b\u5982 rightclick(354,267) hotkey ActionKeyboard.hotkey \u70b9\u51fb\u952e\u76d8\u70ed\u952e\uff0c\u4f8b\u5982 hotkey(\"alt\",\"tab\") type ActionKeyboard.type \u8f93\u5165\u5b57\u7b26\u4e32\uff08\u6a21\u62df\u952e\u76d8\u8f93\u5165\uff0c\u53c2\u6570\u662f\u6574\u4e2a\u5b57\u7b26\u4e32\uff09\uff0c\u4f8b\u5982 type(\"\u5f20\u4e09\") press ActionKeyboard.press \u70b9\u51fb\u952e\u76d8\uff08\u6307\u5b9a\u4e00\u4e2a\u952e\uff09\uff0c\u4f8b\u5982 press(\"a\"), press(\"ctrl\", 2) ocr ActionImage.ocr \u8bc6\u522b\u7ed9\u5b9a\u56fe\u7247\u4e2d\u7684\u6587\u5b57\uff0c\u4f8b\u5982 x = ocr(week_report.clip)\uff0c\u8fd9\u91ccweek_report.clip\u662f\u4e0a\u4e00\u6b65\u622a\u56fe\u5f97\u5230\u7684\u56fe\u50cf\u6570\u636e\uff0cx\u662f\u8bc6\u522b\u51fa\u6765\u7684\u6587\u5b57 print print \u6253\u5370\u4fe1\u606f\u5230\u63a7\u5236\u53f0\uff0c\u5c31\u662fpython\u5185\u7f6e\u7684print\u65b9\u6cd5 find_template ActionImage.find_one_template \u5728\u6307\u5b9a\u56fe\u50cf\u4e2d\uff0c\u67e5\u627e\u53e6\u5916\u4e00\u5e45\u56fe\u50cf\uff0c\u4f8b\u5982 find_template(snapshot_image, week_report.clip).rect\uff0c\u8fd9\u91cc\u8981\u4ece\u56fe\u50cfsnapshot_image\u4e2d\u627e\u5230\u56fe\u50cfweek_report.clip\uff0c \u8fd4\u56de\u7ed3\u679c\u91cc\u6709\u6709\u4e2arect\u5c5e\u6027\uff0c\u6807\u8bc6\u4e86\u627e\u5230\u7684\u7247\u6bb5\u5728\u5c4f\u5e55\u4e0a\u7684\u4f4d\u7f6e snapshot ActionScreen.snapshot_cv \u5c4f\u5e55\u622a\u56fe\uff0c\u4f8b\u5982 snapshot(snapshot_rect)\uff0c\u4f20\u5165\u4e00\u4e2a\u8868\u793a\u5c4f\u5e55\u77e9\u5f62\u4f4d\u7f6e\u7684ScreenRect\u5bf9\u8c61\uff0c\u8fd4\u56de\u5bf9\u5e94\u4f4d\u7f6e\u7684\u56fe\u50cf log_image ActionImage.log_image \u4fdd\u5b58\u56fe\u7247\u5230\u6587\u4ef6\uff0c\u4f8b\u5982 log_image(\"snapshot\", snapshot_image)\uff0c\u628a\u56fe\u50cf\u4fdd\u5b58\u5230\u6307\u5b9a\u6587\u4ef6 ScreenRect ScreenRect \u65b0\u5efa\u4e00\u4e2aScreenRect\u5bf9\u8c61\uff0c\u4f8b\u5982 snapshot_rect = ScreenRect(65, 298, 221, 761)\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u63a5\u53d74\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u662fleft, right, top, bottom wait time.sleep \u7b49\u5f85\u6307\u5b9a\u65f6\u95f4\uff08\u79d2\uff09\uff0c\u4f8b\u5982 wait(0.5)\uff0c\u6267\u884c\u5230\u8fd9\u91cc\u4f1a\u7b49\u5f85\uff08\u4f11\u7720\uff09\u6307\u5b9a\u7684\u79d2\u6570 copy ActionClipboard.copy \u590d\u5236\uff0c\u4f8b\u5982 copy(x)\uff0c\u628a\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u590d\u5236\u5230\u526a\u8d34\u677f paste ActionClipboard.paste \u7c98\u8d34\uff0c\u4f8b\u5982 x = paste(), \u628a\u526a\u8d34\u677f\u91cc\u7684\u5185\u5bb9\u53d8\u6210\u5b57\u7b26\u4e32\u8fd4\u56de\uff08\u6ce8\u610f\u5e76\u4e0d\u662f\u5728\u754c\u9762\u5f53\u524d\u4f4d\u7f6e\u7c98\u8d34\uff0c\u5982\u679c\u9700\u8981\u8fd9\u4e2a\u6548\u679c\uff0c\u53ef\u4ee5\u8c03\u7528 hotkey(\"ctrl\",\"v\") \uff09 locate_state ActionError.locate_state \u5b9a\u4f4d\u5f53\u524d\u5904\u4e8e\u54ea\u4e2aState\uff0c\u4f8b\u5982 locate_state('\u6ca1\u6709\u627e\u5230\u9489\u9489\u7a97\u53e3')\uff0c\u6b64\u65f6\u7a0b\u5e8f\u4f1a\u4e2d\u6b62\u6b63\u5e38\u7684\u72b6\u6001\u8fc1\u79fb\uff0c\u800c\u662f\u904d\u5386\u5f53\u524d\u72b6\u6001\u5c42\u7ea7\uff0c\u67e5\u627e\u6709\u53ef\u80fd\u5904\u4e8e\u54ea\u4e2a\u72b6\u6001\uff0c\u5e76\u8df3\u8f6c\u5230\u90a3\u4e2a\u72b6\u6001\u7ee7\u7eed\u6267\u884c\uff1b\u53c2\u6570\u5b57\u7b26\u4e32\u4f1a\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff0c set_window_pos ActionWindow.set_window_pos \u8bbe\u7f6e\u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\uff0c\u4f8b\u5982 set_window_pos(find_result.hwnd, 0, 0, 1024, 768)\uff0c\u8fd9\u91cc\u7684hwnd\u901a\u5e38\u662fWindowDetection\u8fd4\u56de\u7684\u7a97\u53e3\u53e5\u67c4\uff0c\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570\uff0c\u6307\u5b9a\u7a97\u53e3\u7684top,left,width,height\u5750\u6807 Evaluation ( Action ) Action\u64cd\u4f5c\u7c7b\u7684\u5b50\u7c7b\uff0c\u6267\u884c\u4ee5\u540e\u4f1a\u6709\u8fd4\u56de\u503c Execution ( Action ) Action\u64cd\u4f5c\u7c7b\u7684\u5b50\u7c7b\uff0c\u6267\u884c\u4ee5\u540e\u6ca1\u6709\u8fd4\u56de\u503c AutoBase AutoBase \u6267\u884c\u68c0\u6d4b\u7c7b\u7684\u57fa\u7840\u7c7b\u3002\u7528\u4e8e\u6307\u5b9a\u4e00\u4e9b\u901a\u7528\u914d\u7f6e Attributes: Name Type Description debug bool \u8868\u793a\u6267\u884c\u68c0\u6d4b\u7684\u65f6\u5019\uff0c\u662f\u5426\u8981\u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f\uff0c\u7f3a\u7701\u4e3aFalse Find Find \u7528\u4e8e\u67e5\u627e\u7684\u57fa\u7840\u914d\u7f6e\uff0c\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u67e5\u627e\u6a21\u5f0f\uff0c\u5728State\u8282\u70b9\u4e2d\uff0c\u5b83\u5982\u679c\u662fcheck\u5c5e\u6027\uff0c\u5219\u4e0d\u4fdd\u5b58\u67e5\u627e\u7ed3\u679c\uff0c\u5982\u679c\u662ffind\u5c5e\u6027\uff0c\u5219\u628a\u67e5\u627e\u7ed3\u679c\uff0c\u4e34\u65f6\u5b58\u5165find_result Attributes: Name Type Description image ImageDetection) \u56fe\u50cf\u68c0\u6d4b\uff0c\u5728\u5f53\u524d\u9875\u9762\u4e2d\u627e\u6307\u5b9a\u56fe\u50cf\u7247\u6bb5\uff0c\u4e0d\u4e00\u5b9a\u8981\u5b8c\u5168\u4e00\u81f4\uff0c\u53ef\u4ee5\u6307\u5b9a\u76f8\u4f3c\u5ea6 ocr OcrDetection) \u6587\u672c\u68c0\u6d4b\uff0c\u5728\u5f53\u524d\u9875\u9762\u7684\u6307\u5b9a\u4f4d\u7f6e\u505aOCR\u8bc6\u522b\uff0c\u7136\u540e\u67e5\u770b\u662f\u5426\u6709\u6307\u5b9a\u7684\u6587\u672c color ColorDetection) \u989c\u8272\u68c0\u6d4b\uff0c\u5728\u5f53\u524d\u9875\u9762\u7684\u6307\u5b9a\u50cf\u7d20\u4f4d\u7f6e\uff0c\u67e5\u770b\u662f\u5426\u7b26\u5408\u5b9a\u4e49\u7684\u989c\u8272 window WindowDetection) \u7a97\u53e3\u68c0\u6d4b\uff0c\u5728\u5f53\u524d\u9875\u9762\u67e5\u627e\u6307\u5b9atitle\u6216\u8005name\u7684\u7a97\u53e3 scroll Scroll) \u67e5\u627e\u7684\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u627e\u5230\uff0c\u5c31\u6eda\u52a8\u5f53\u524d\u7a97\u53e3\uff0c\u7ee7\u7eed\u67e5\u627e fail_action Execution) \u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u9700\u8981\u6267\u884c\u7684\u64cd\u4f5c find_all bool) \u662f\u5426\u67e5\u627e\u6240\u6709\u7b26\u5408\u68c0\u6d4b\u6761\u4ef6\u7684\u7ed3\u679c\uff0c\u7f3a\u7701\u4e3aFalse\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3aTrue\uff0c\u90a3\u4e48find_result\u5c31\u662f\u4e00\u4e2a\u5217\u8868 Misc State \u72b6\u6001\u8282\u70b9\uff0c\u7528\u4e8e\u914d\u7f6e\u754c\u9762\u6d41\u4e2d\u4e00\u4e2a\u7279\u5b9a\u7684\u9875\u9762 Attributes: Name Type Description name str \u72b6\u6001\uff08\u9875\u9762\uff09\u540d\u79f0 id int \u72b6\u6001\u552f\u4e00\u6807\u8bc6 check Find \u68c0\u67e5\u662f\u5426\u771f\u5c5e\u4e8e\u5f53\u524d\u9875\u9762 find Find \u5728\u5f53\u524d\u9875\u9762\u4e2d\u67e5\u627e\u7279\u5b9a\u5143\u7d20\u6216\u8005\u7247\u6bb5 action Action \u8fdb\u5165\u5f53\u524d\u9875\u9762\u72b6\u6001\u540e\uff0c\u4f1a\u91c7\u53d6\u4ec0\u4e48\u64cd\u4f5c\uff08\u6bd4\u5982\u9f20\u6807\u70b9\u51fb\uff09\uff0c\u4f46\u4e0d\u4f1a\u5f15\u8d77\u72b6\u6001\u8fc1\u79fb\uff0c\u8fd9\u91cc\u53ef\u4ee5\u662f\u4e00\u4e2a\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u662f\u591a\u4e2a\uff1b\u5982\u679c\u9700\u8981\u591a\u4e2a\u64cd\u4f5c\uff0c\u5c31\u914d\u7f6e\u4e3a\u5217\u8868\uff0c\u64cd\u4f5c\u4f1a\u6309\u5217\u8868\u987a\u5e8f\u6267\u884c transition Transition \u72b6\u6001\u8fc1\u79fb\u914d\u7f6e foreach ForEach \u5728\u5f53\u524d\u72b6\u6001\u4e0b\uff0c\u9488\u5bf9\u7279\u5b9a\u6570\u636e\u505a\u5faa\u73af Transition \u72b6\u6001\u8fc1\u79fb\u914d\u7f6e\u8282\u70b9\uff0c\u6307\u5b9a\u4ec0\u4e48\u52a8\u4f5c\u4f1a\u89e6\u53d1\u8fc1\u79fb Project Project \u914d\u7f6e\u6839\u8282\u70b9\uff0c\u5bf9\u5e94\u81ea\u52a8\u5316\u9879\u76ee\u7684\u57fa\u672c\u4fe1\u606f Attributes: Name Type Description name str \u9879\u76ee\u540d\u79f0 ver int \u6570\u5b57\u7248\u672c\u53f7 screen_width int \u5c4f\u5e55\u5bbd\u5ea6\uff08\u5982\u679c\u8bbe\u7f6e\u4e86\u8fd9\u4e2a\u5c5e\u6027\uff0c\u9879\u76ee\u8fd0\u884c\u65f6\u4f1a\u9996\u5148\u8c03\u6574\u5206\u8fa8\u7387\uff09 screen_height int \u5c4f\u5e55\u9ad8\u5ea6\uff08\u5982\u679c\u8bbe\u7f6e\u4e86\u8fd9\u4e2a\u5c5e\u6027\uff0c\u9879\u76ee\u8fd0\u884c\u65f6\u4f1a\u9996\u5148\u8c03\u6574\u5206\u8fa8\u7387\uff09 states List[State] \u72b6\u6001\u5217\u8868\uff0c\u9879\u76ee\u542f\u52a8\u540e\uff0c\u5c06\u4ece\u7b2c\u4e00\u4e2a\u72b6\u6001\u5f00\u59cb\u6267\u884c detection special ColorDetection ColorDetection ( Detection ) \u989c\u8272\u68c0\u6d4b\uff0c\u67e5\u770b\u5f53\u524d\u9875\u9762\u4e0a\uff0c\u6307\u5b9a\u4f4d\u7f6e\u7684\u50cf\u7d20\uff0c\u662f\u5426\u6ee1\u8db3\u6307\u5b9a\u7684\u989c\u8272\u503c\u3002 Examples: check: color: pos: (12,92) color: (209, 211, 213) fail_action: locate_state('\u5f53\u524d\u9875\u9762\u6ca1\u6709\u68c0\u6d4b\u5230\u6307\u5b9a\u989c\u8272') Attributes: Name Type Description pos Tuple[int,int] \u50cf\u7d20\u5750\u6807\u4f4d\u7f6e color Tuple[int,int] rgb\u8868\u793a\u7684\u989c\u8272\u503c\uff0c3\u7ec40~255\u4e4b\u95f4\u7684\u6570\u503c tolerance int \u5bb9\u5fcd\u5ea6\uff0crgb\u4e09\u8272\u5dee\u7edd\u5bf9\u503c\u4e4b\u548c\uff0c\u5982\u679c\u5c0f\u4e8e\u5bb9\u5fcd\u5ea6\uff0c\u5c31\u8ba4\u4e3a\u989c\u8272\u76f8\u540c Detection Detection ( AutoBase ) \u68c0\u6d4b\u57fa\u7840\u7c7b\uff0c\u6709ColorDetection, ImageDetection, OcrDetection, WindowDetection\u7b49\u5b50\u7c7b\uff0c\u7528\u4e8e\u68c0\u6d4b\u9875\u9762\u4e0a\u7684\u7279\u5b9a\u5185\u5bb9\u3002 ImageDetection ImageDetection ( Detection ) \u56fe\u50cf\u68c0\u6d4b\uff0c\u5728\u5f53\u524d\u9875\u9762\u7684\u6307\u5b9a\u8303\u56f4\u5185\uff0c\u67e5\u627e\u5339\u914d\u7684\u56fe\u50cf\u3002\u5982\u679c\u627e\u5230\u4e86\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2aresult\u7ed3\u6784\uff0c Examples: # State\u7684\u4e00\u4e2a\u5c5e\u6027 image: snapshot: !rect l:65, r:298, t:221, b:761 template: auto_dingding/work_report_text_snippet.png confidence: 0.8 keep_clip: result.rect_on_image.snap_left(45) Attributes: Name Type Description snapshot ScreenRect \u5c4f\u5e55\u622a\u56fe\u4f4d\u7f6e\uff0c\u9650\u5b9a\u67e5\u627e\u8303\u56f4\uff0c\u53ef\u4ee5\u6307\u5b9a\u5f97\u5927\u4e00\u4e9b\uff0c\u7a0b\u5e8f\u4f1a\u5728\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e\u56fe\u50cf template str \u8981\u67e5\u627e\u7684\u56fe\u50cf\u6a21\u677f\u6587\u4ef6\uff08\u652f\u6301\u76f8\u5bf9\u8def\u5f84\uff09 confidence float \u7f6e\u4fe1\u5ea6\uff0c\u67e5\u627e\u56fe\u50cf\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u9700\u8981\u4e25\u683c\u4e00\u81f4\uff0c\u7a0b\u5e8f\u4f1a\u6a21\u7cca\u5339\u914d\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u7f6e\u4fe1\u5ea6\uff080 ~ 1\u4e4b\u95f4\u7684\u4e00\u4e2a\u6570\u503c\uff09\uff0c\u7f6e\u4fe1\u5ea6\u5927\u4e8e\u7ed9\u5b9a\u7684\u6570\u503c\uff0c\u624d\u4f1a\u8ba4\u4e3a\u627e\u5230\u4e86 keep_clip Action.Evaluation \u6839\u636e\u8fd4\u56de\u7ed3\u679c\uff0c\u989d\u5916\u4fdd\u6301\u4e00\u4e2a\u622a\u56fe\u7247\u6bb5\uff08\u6bd4\u5982\u5df2\u7ecf\u67e5\u5230\u56fe\u50cf\u5de6\u4fa7100\u4e2a\u50cf\u7d20\u7684\u533a\u57df\uff09 result: rect_on_image: \u7ed3\u679c\u56fe\u50cf\u5728\u6307\u5b9a\u533a\u57df\u5185\u7684\u76f8\u5bf9\u4f4d\u7f6e rect_on_screen: \u7ed3\u679c\u56fe\u50cf\u5728\u5c4f\u5e55\u4e0a\u7684\u4f4d\u7f6e image: \u7ed3\u679c\u56fe\u50cf clip: \u989d\u5916\u622a\u53d6\u7684\u56fe\u50cf\u7247\u6bb5 clip_on_image: clip\u56fe\u50cf\u5728\u6307\u5b9a\u533a\u57df\u5185\u7684\u76f8\u5bf9\u4f4d\u7f6e clip_on_screen: clip\u56fe\u50cf\u5728\u5c4f\u5e55\u4e0a\u7684\u4f4d\u7f6e image_in ( self , template_file_path , big_image , min_confidence , find_all ) \u68c0\u67e5\u4e24\u5e45\u56fe\u662f\u5426\u76f8\u4f3c :param min_confidence: \u6700\u4f4e\u53ef\u4fe1\u5ea6, \u4e0d\u8db3\u8fd9\u4e2a\u53ef\u4fe1\u5ea6\u7684\u7ed3\u679c\u5c06\u88ab\u5ffd\u7565 :param find_all: \u662f\u5426\u67e5\u627e\u6240\u6709\u7ed3\u679c,\u5982\u679c\u4e3aFalse, \u90a3\u4e48\u53ea\u8fd4\u56de\u7b2c\u4e00\u4e2a :param template_file_path: \u8981\u67e5\u627e\u7684\u56fe\u6587\u4ef6\u8def\u5f84\u4f4d\u7f6e :param big_image: \u5927\u56fe :return:\u76f8\u4f3c\u5ea6\uff0c\u5b8c\u5168\u76f8\u540c\u662f1\uff0c\u5b8c\u5168\u4e0d\u540c\u662f0 \u76ee\u6807\u56fe\u50cf\u9700\u8981\u662fpillow\u683c\u5f0f\u7684\uff0c\u5c06\u5728\u51fd\u6570\u4e2d\u88ab\u8f6c\u6362\u4e3aopencv\u683c\u5f0f\u7684\uff0c\u6700\u540e\u7528aircv\u7684find_template\u65b9\u6cd5\u6bd4\u8f83\u662f\u5426\u76f8\u4f3c Source code in autopy\\core\\detection\\imagedetection.py def image_in ( self , template_file_path , big_image , min_confidence , find_all ): \"\"\" \u68c0\u67e5\u4e24\u5e45\u56fe\u662f\u5426\u76f8\u4f3c :param min_confidence: \u6700\u4f4e\u53ef\u4fe1\u5ea6, \u4e0d\u8db3\u8fd9\u4e2a\u53ef\u4fe1\u5ea6\u7684\u7ed3\u679c\u5c06\u88ab\u5ffd\u7565 :param find_all: \u662f\u5426\u67e5\u627e\u6240\u6709\u7ed3\u679c,\u5982\u679c\u4e3aFalse, \u90a3\u4e48\u53ea\u8fd4\u56de\u7b2c\u4e00\u4e2a :param template_file_path: \u8981\u67e5\u627e\u7684\u56fe\u6587\u4ef6\u8def\u5f84\u4f4d\u7f6e :param big_image: \u5927\u56fe :return:\u76f8\u4f3c\u5ea6\uff0c\u5b8c\u5168\u76f8\u540c\u662f1\uff0c\u5b8c\u5168\u4e0d\u540c\u662f0 \u76ee\u6807\u56fe\u50cf\u9700\u8981\u662fpillow\u683c\u5f0f\u7684\uff0c\u5c06\u5728\u51fd\u6570\u4e2d\u88ab\u8f6c\u6362\u4e3aopencv\u683c\u5f0f\u7684\uff0c\u6700\u540e\u7528aircv\u7684find_template\u65b9\u6cd5\u6bd4\u8f83\u662f\u5426\u76f8\u4f3c \"\"\" if isinstance ( big_image , PIL . Image . Image ): image_current = ActionImage . pil_to_cv ( big_image ) else : image_current = big_image ActionImage . log_image ( 'current' , image_current , debug = self . debug ) image_template = ActionImage . load_from_file ( template_file_path ) ActionImage . log_image ( 'template' , image_template , debug = self . debug ) if find_all : result_list = ActionImage . find_all_template ( image_current , image_template , min_confidence ) # if self.debug: # for result in result_list: # rect = result.rect # self.log_image('match', image_current[rect.top:rect.bottom, rect.left:rect.right]) return result_list else : result = ActionImage . find_one_template ( image_current , image_template , min_confidence ) if self . debug : print ( 'image detection result: {} , {} ' . format ( result . confidence if result is not None else None , result . rect if result is not None else None )) return result OcrDetection OcrDetection ( Detection ) \u6587\u672c\u68c0\u6d4b\uff0c\u5728\u5f53\u524d\u9875\u9762\u7684\u6307\u5b9a\u8303\u56f4\u5185\uff0c\u9996\u5148\u7528OCR\u8bc6\u522b\u6587\u5b57\uff0c\u67e5\u627e\u662f\u5426\u4e0e\u7ed9\u5b9a\u6587\u672c\u5339\u914d\u3002\u5982\u679c\u8bc6\u522b\u6587\u672c\u548c\u7ed9\u5b9a\u6587\u672c\u7684\u5339\u914d\u5ea6\uff0c\u5927\u4e8e\u7ed9\u5b9a\u503c\uff0c\u5219\u8ba4\u4e3a\u627e\u5230\u4e86\uff0c\u5e76\u4e14\u5c06\u5176\u8fd4\u56de Examples: # State\u7684\u4e00\u4e2a\u5c5e\u6027 ocr: snapshot: !rect l:75, r:137, t:129, b:157 text: \"\u770b\u65e5\u5fd7\" Attributes: Name Type Description snapshot ScreenRect \u5c4f\u5e55\u622a\u56fe\u4f4d\u7f6e\uff0c\u9650\u5b9a\u67e5\u627e\u8303\u56f4\uff0c\u53ef\u4ee5\u6307\u5b9a\u5f97\u5927\u4e00\u4e9b\uff0c\u7a0b\u5e8f\u4f1a\u5728\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e\u56fe\u50cf text str \u8981\u67e5\u627e\u7684\u6587\u672c\u5b57\u7b26\u4e32 confidence float \u7f6e\u4fe1\u5ea6\uff0c\u67e5\u627e\u6587\u672c\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u9700\u8981\u4e25\u683c\u4e00\u81f4\uff0c\u7a0b\u5e8f\u4f1a\u6a21\u7cca\u5339\u914d\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u7f6e\u4fe1\u5ea6\uff080 ~ 1\u4e4b\u95f4\u7684\u4e00\u4e2a\u6570\u503c\uff09\uff0c\u7f6e\u4fe1\u5ea6\u5927\u4e8e\u7ed9\u5b9a\u7684\u6570\u503c\uff0c\u624d\u4f1a\u8ba4\u4e3a\u627e\u5230\u4e86 result: \u5982\u679c\u627e\u5230\u4e86\uff0c\u5c31\u8fd4\u56deOCR\u8bc6\u522b\u7684\u6587\u672c\u672c\u8eab\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u8fd4\u56deNone text_similar ( self , source_text , target_pillow_image ) \u68c0\u67e5\u6307\u5b9a\u56fe\u50cf\u4e2d\u662f\u5426\u5305\u542b\u7279\u5b9a\u7684\u6587\u5b57 :param source_text: \u8981\u67e5\u627e\u7684\u6587\u5b57 :param target_pillow_image: \u76ee\u6807\u56fe\u50cf\uff0c\u51fd\u6570\u5c06\u4ece\u8fd9\u4e2a\u56fe\u50cf\u63d0\u53d6\u6587\u5b57\uff0c :return:\u76f8\u4f3c\u5ea6\uff0c\u5b8c\u5168\u76f8\u540c\u662f1\uff0c\u5b8c\u5168\u4e0d\u540c\u662f0\uff0c\u5176\u4ed6\u662f source_text \u4e0e\u8bc6\u522b\u51fa\u6765\u7684\u6587\u5b57\u7684\u6bd4\u4f8b Source code in autopy\\core\\detection\\ocrdetection.py def text_similar ( self , source_text , target_pillow_image ): \"\"\" \u68c0\u67e5\u6307\u5b9a\u56fe\u50cf\u4e2d\u662f\u5426\u5305\u542b\u7279\u5b9a\u7684\u6587\u5b57 :param source_text: \u8981\u67e5\u627e\u7684\u6587\u5b57 :param target_pillow_image: \u76ee\u6807\u56fe\u50cf\uff0c\u51fd\u6570\u5c06\u4ece\u8fd9\u4e2a\u56fe\u50cf\u63d0\u53d6\u6587\u5b57\uff0c :return:\u76f8\u4f3c\u5ea6\uff0c\u5b8c\u5168\u76f8\u540c\u662f1\uff0c\u5b8c\u5168\u4e0d\u540c\u662f0\uff0c\u5176\u4ed6\u662f source_text \u4e0e\u8bc6\u522b\u51fa\u6765\u7684\u6587\u5b57\u7684\u6bd4\u4f8b \"\"\" if len ( source_text ) == 0 : '''\u5982\u679csource_text\u662f\u7a7a\u5b57\u7b26\uff0c\u5c31\u8ba4\u4e3a\u6c38\u8fdc\u80fd\u8bc6\u522b\u4e0d\u51fa\u6765''' return 0 , None cv_image = ActionImage . pil_to_cv ( target_pillow_image ) ActionImage . log_image ( 'target' , cv_image , debug = self . debug ) text_from_image = ActionImage . ocr ( cv_image ) if self . debug : print ( 'ocr result: {} ' . format ( text_from_image )) if source_text in text_from_image : return len ( source_text ) / len ( text_from_image ), text_from_image else : return 0 , None WindowDetection WindowDetection ( Detection ) \u7a97\u53e3\u68c0\u6d4b\uff0c\u68c0\u6d4b\u5728\u5f53\u524d\u73af\u5883\u4e2d\uff0c\u662f\u5426\u6709\u6307\u5b9a\u7684\u7a97\u53e3\u3002 \u5982\u679ccurrent_only\u8bbe\u7f6e\u4e3aTrue\uff08\u7f3a\u7701\u503c\uff09\uff0c\u90a3\u4e48\u53ea\u68c0\u6d4b\u5f53\u524d\u7a97\u53e3\u662f\u5426\u7b26\u5408title\u6216\u8005win_class\u914d\u7f6e\uff1b \u5982\u679ccurrent_only\u8bbe\u7f6e\u4e3aFalse\uff0c\u90a3\u4e48\u5c31\u5728\u6574\u4e2a\u684c\u9762\u4e2d\u5bfb\u627e\u6307\u5b9atitle\u6216\u8005win_class\u7684\u7a97\u53e3\u3002 \u5982\u679c\u7ed3\u679c\u627e\u5230\u4e86\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2aWindowResult\u5bf9\u8c61\uff0c\u91cc\u9762\u542b\u6709\u4e00\u4e2ahwnd\u5c5e\u6027\uff0c\u4fdd\u5b58\u4e86\u7a97\u53e3\u53e5\u67c4\uff1b \u5982\u679c\u7ed3\u679c\u6ca1\u5230\u5230\uff0c\u5219\u8fd4\u56deNone Examples: # State\u7684\u4e00\u4e2a\u5c5e\u6027 find: window: title: \u9489\u9489 debug: True fail_action: raise_error('\u6ca1\u6709\u627e\u5230\u9489\u9489\u7a97\u53e3') \u6216\u8005 # State\u7684\u4e00\u4e2a\u5c5e\u6027 check: - window: win_class: StandardFrame_DingTalk debug: True fail_action: locate_state('\u6ca1\u6709\u627e\u5230\u9489\u9489\u7a97\u53e3') Attributes: Name Type Description current_only bool \u662f\u5426\u53ea\u68c0\u6d4b\u5f53\u524d\u7a97\u53e3\uff0c\u7f3a\u7701\u4e3aTrue\uff1b\u5982\u679c\u8bbe\u7f6e\u4e3aFalse\uff0c\u5219\u4f1a\u5728\u684c\u9762\u6240\u6709\u6253\u5f00\u7684\u7a97\u53e3\u4e2d\u67e5\u627e win_class str \u7a97\u53e3\u7684win_class\uff0c\u53ef\u7528spy++\u7b49\u5de5\u5177\u67e5\u770b title str \u7a97\u53e3\u6807\u9898\uff0c\u901a\u5e38\u662f\u663e\u793a\u5728\u4efb\u52a1\u680f\u4e0a\u7684\u6587\u5b57 result: \u5982\u679c\u627e\u5230\u4e86\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2aWindowResult\u5bf9\u8c61\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u8fd4\u56deNone WindowResult WindowDetection\u7684\u8fd4\u56de\u503c\u5bf9\u8c61 Attributes: Name Type Description hwnd int \u7a97\u53e3\u53e5\u67c4 main \u7a0b\u5e8f\u542f\u52a8\u5165\u53e3\u3002\u542f\u52a8\u540e\uff0c\u7a0b\u5e8f\u5c06\u6309\u7167-project(-p)\u53c2\u6570\u6307\u5b9a\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6267\u884c\u81ea\u52a8\u5316\u9879\u76ee Examples: python autopy -p ./conf/auto_dingding.yaml","title":"\u53c2\u8003\u624b\u518c"},{"location":"api_reference/#autopy_1","text":"","title":"Autopy \u53c2\u8003\u624b\u518c"},{"location":"api_reference/#autopy.core","text":"","title":"core"},{"location":"api_reference/#autopy.core.action","text":"","title":"action"},{"location":"api_reference/#autopy.core.action.ActionClipboard","text":"","title":"ActionClipboard"},{"location":"api_reference/#autopy.core.action.ActionClipboard.ActionClipboard","text":"\u526a\u8d34\u677f\u76f8\u5173\u64cd\u4f5c","title":"ActionClipboard"},{"location":"api_reference/#autopy.core.action.ActionClipboard.ActionClipboard.copy","text":"\u590d\u5236\u6307\u5b9a\u5b57\u7b26\u4e32\u5230\u526a\u8d34\u677f Parameters: str_to_copy: \u8981\u590d\u5236\u7684\u5b57\u7b26\u4e32 Returns: None Source code in autopy\\core\\action\\actionclipboard.py @classmethod def copy ( cls , str_to_copy ): \"\"\" \u590d\u5236\u6307\u5b9a\u5b57\u7b26\u4e32\u5230\u526a\u8d34\u677f Args: str_to_copy: \u8981\u590d\u5236\u7684\u5b57\u7b26\u4e32 Returns: None \"\"\" pyperclip . copy ( str_to_copy )","title":"copy()"},{"location":"api_reference/#autopy.core.action.ActionClipboard.ActionClipboard.paste","text":"\u63d0\u53d6\u5f53\u524d\u526a\u8d34\u677f\u4e2d\u7684\u6587\u672c\uff0c\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fd4\u56de Returns: str \u2013 \u5f53\u524d\u526a\u8d34\u677f\u4e2d\u7684\u6587\u672c\u5b57\u7b26\u4e32 Source code in autopy\\core\\action\\actionclipboard.py @classmethod def paste ( cls ): \"\"\" \u63d0\u53d6\u5f53\u524d\u526a\u8d34\u677f\u4e2d\u7684\u6587\u672c\uff0c\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fd4\u56de Returns: str: \u5f53\u524d\u526a\u8d34\u677f\u4e2d\u7684\u6587\u672c\u5b57\u7b26\u4e32 \"\"\" pyperclip . paste ()","title":"paste()"},{"location":"api_reference/#autopy.core.action.ActionError","text":"","title":"ActionError"},{"location":"api_reference/#autopy.core.action.ActionError.ActionError","text":"\u5f02\u5e38\u5904\u7406\u76f8\u5173\u65b9\u6cd5","title":"ActionError"},{"location":"api_reference/#autopy.core.action.ActionError.ActionError.locate_state","text":"\u8fd9\u4e2a\u65b9\u6cd5\u7684\u610f\u601d\uff0c\u91cd\u65b0\u67e5\u627e\u5f53\u524d\u754c\u9762\u5904\u4e8e\u54ea\u4e2a\u72b6\u6001\uff0c\u4f46\u662f\u771f\u6b63\u7684\u67e5\u627e\u903b\u8f91\u662f\u5728Executor\u4e2d\uff0c\u8fd9\u91cc\u53ea\u662f\u8f93\u51fa\u4e00\u4e0b Parameters: params: tuple \u2013 \u5b9a\u4f4d\u5f53\u524d\u754c\u9762\u6240\u5c5e\u72b6\u6001\u524d\uff0c\u8981\u8f93\u51fa\u7684\u5185\u5bb9 Returns: None Source code in autopy\\core\\action\\actionerror.py @staticmethod def locate_state ( params : tuple ): \"\"\" \u8fd9\u4e2a\u65b9\u6cd5\u7684\u610f\u601d\uff0c\u91cd\u65b0\u67e5\u627e\u5f53\u524d\u754c\u9762\u5904\u4e8e\u54ea\u4e2a\u72b6\u6001\uff0c\u4f46\u662f\u771f\u6b63\u7684\u67e5\u627e\u903b\u8f91\u662f\u5728Executor\u4e2d\uff0c\u8fd9\u91cc\u53ea\u662f\u8f93\u51fa\u4e00\u4e0b Args: params: \u5b9a\u4f4d\u5f53\u524d\u754c\u9762\u6240\u5c5e\u72b6\u6001\u524d\uff0c\u8981\u8f93\u51fa\u7684\u5185\u5bb9 Returns: None \"\"\" ( msg ) = params print ( \"ERROR: {} \" . format ( msg ))","title":"locate_state()"},{"location":"api_reference/#autopy.core.action.ActionError.ActionError.trigger","text":"\u4e3b\u52a8\u89e6\u53d1\u4e00\u4e2a\u8fd0\u884c\u65f6\u5f02\u5e38 Parameters: params: tuple \u2013 \u8981\u89e6\u53d1\u7684\u5f02\u5e38\u5185\u5bb9 Returns: None Source code in autopy\\core\\action\\actionerror.py @staticmethod def trigger ( params : tuple ): \"\"\" \u4e3b\u52a8\u89e6\u53d1\u4e00\u4e2a\u8fd0\u884c\u65f6\u5f02\u5e38 Args: params: \u8981\u89e6\u53d1\u7684\u5f02\u5e38\u5185\u5bb9 Returns: None \"\"\" ( msg ) = params # print(\"ERROR: {}\".format(msg)) raise RuntimeError ( msg )","title":"trigger()"},{"location":"api_reference/#autopy.core.action.ActionImage","text":"","title":"ActionImage"},{"location":"api_reference/#autopy.core.action.ActionImage.ActionImage","text":"\u56fe\u50cf\u5904\u7406\u64cd\u4f5c\u7c7b","title":"ActionImage"},{"location":"api_reference/#autopy.core.action.ActionImage.ActionImage.load_from_file","text":"\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u56fe\u7247\uff0c\u8fd4\u56deopencv\u683c\u5f0f\u7684\u53d8\u91cf Parameters: image_path: str \u2013 \u56fe\u7247\u8def\u5f84\uff0c\u6682\u65f6\u4ec5\u652f\u63018\u4f4d\u989c\u8272\u6df1\u5ea6 Returns: opencv\u683c\u5f0f\u7684\u56fe\u7247\u53d8\u91cf Source code in autopy\\core\\action\\actionimage.py @classmethod def load_from_file ( cls , image_path ): \"\"\" \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u56fe\u7247\uff0c\u8fd4\u56deopencv\u683c\u5f0f\u7684\u53d8\u91cf Args: image_path (str): \u56fe\u7247\u8def\u5f84\uff0c\u6682\u65f6\u4ec5\u652f\u63018\u4f4d\u989c\u8272\u6df1\u5ea6 Returns: opencv\u683c\u5f0f\u7684\u56fe\u7247\u53d8\u91cf \"\"\" return cv2 . imdecode ( np . fromfile ( image_path , dtype = np . uint8 ), - 1 )","title":"load_from_file()"},{"location":"api_reference/#autopy.core.action.ActionImage.ActionImage.ocr","text":"\u4ece\u6307\u5b9a\u56fe\u7247\u7684\u7279\u5b9a\u4f4d\u7f6e\u4e2d\u63d0\u53d6\u6587\u672c\u5b57\u7b26\u4e32 Parameters: cv_image: numpy \u2013 \u56fe\u7247\u53d8\u91cf\uff0c\u8981\u6c42\u662fopencv\u683c\u5f0f\u7684 rect: \u56fe\u7247\u4e2d\u7684\u4f4d\u7f6e Source code in autopy\\core\\action\\actionimage.py @classmethod def ocr ( cls , cv_image , rect = None ): \"\"\" \u4ece\u6307\u5b9a\u56fe\u7247\u7684\u7279\u5b9a\u4f4d\u7f6e\u4e2d\u63d0\u53d6\u6587\u672c\u5b57\u7b26\u4e32 Args: cv_image (numpy): \u56fe\u7247\u53d8\u91cf\uff0c\u8981\u6c42\u662fopencv\u683c\u5f0f\u7684 rect: \u56fe\u7247\u4e2d\u7684\u4f4d\u7f6e Returns: \"\"\" if rect is not None : cv_image = cv_image [ rect . top : rect . bottom , rect . left : rect . right ] cv_image_gray = cv2 . cvtColor ( cv_image , cv2 . COLOR_BGR2GRAY ) img_high_contrast = cls . grayscale_linear_transformation ( cv_image_gray , 0 , 255 ) res_chars = cls . cnocr . ocr_for_single_line ( img_high_contrast ) if len ( res_chars ) == 0 : return '' else : result = '' . join ( list ( map ( str , res_chars ))) return result","title":"ocr()"},{"location":"api_reference/#autopy.core.action.ActionImage.ActionImage.pil_to_cv","text":"\u628aPillow(PIL)\u683c\u5f0f\u7684\u56fe\u7247\uff0c\u8f6c\u6362\u6210opencv\u683c\u5f0f\u7684\u56fe\u7247\u3002 \u4e24\u8005\u7684\u5dee\u522b\u5728\u4e8e\uff0c\u9996\u5148PIL\u652f\u6301\u66f4\u4e30\u5bcc\u7684\u56fe\u7247\u8868\u8fbe\u65b9\u5f0f\uff0c\u4e0d\u4e00\u5b9a\u4f7f\u7528RGB\u8868\u8fbe\uff0c\u8fd8\u53ef\u4ee5\u7528HSV\u6216\u8005\u5176\u4ed6\u5f62\u5f0f\uff1b \u4f46opencv\u4e00\u5b9a\u7528\u7ea2\u7eff\u84dd\u4e09\u539f\u8272\u7ec4\u5408\uff0c\u800c\u4e14\u8fd8\u522b\u51fa\u5fc3\u88c1\u5730\u4f7f\u7528\u4e86BGR\u8fd9\u4e2a\u987a\u5e8f\uff0c\u800c\u4e0d\u662f\u901a\u5e38\u7684RGB\u3002 Parameters: pil_image: PIL\u683c\u5f0f\u7684\u56fe\u7247 Returns: opencv\u683c\u5f0f\u7684\u56fe\u7247 Source code in autopy\\core\\action\\actionimage.py @classmethod def pil_to_cv ( cls , pil_image ): \"\"\" \u628aPillow(PIL)\u683c\u5f0f\u7684\u56fe\u7247\uff0c\u8f6c\u6362\u6210opencv\u683c\u5f0f\u7684\u56fe\u7247\u3002 \u4e24\u8005\u7684\u5dee\u522b\u5728\u4e8e\uff0c\u9996\u5148PIL\u652f\u6301\u66f4\u4e30\u5bcc\u7684\u56fe\u7247\u8868\u8fbe\u65b9\u5f0f\uff0c\u4e0d\u4e00\u5b9a\u4f7f\u7528RGB\u8868\u8fbe\uff0c\u8fd8\u53ef\u4ee5\u7528HSV\u6216\u8005\u5176\u4ed6\u5f62\u5f0f\uff1b \u4f46opencv\u4e00\u5b9a\u7528\u7ea2\u7eff\u84dd\u4e09\u539f\u8272\u7ec4\u5408\uff0c\u800c\u4e14\u8fd8\u522b\u51fa\u5fc3\u88c1\u5730\u4f7f\u7528\u4e86BGR\u8fd9\u4e2a\u987a\u5e8f\uff0c\u800c\u4e0d\u662f\u901a\u5e38\u7684RGB\u3002 Args: pil_image: PIL\u683c\u5f0f\u7684\u56fe\u7247 Returns: opencv\u683c\u5f0f\u7684\u56fe\u7247 \"\"\" img_tmp = pil_image . convert ( 'RGB' ) cv_rgb = np . array ( img_tmp ) return cv2 . cvtColor ( cv_rgb , cv2 . COLOR_RGB2BGR )","title":"pil_to_cv()"},{"location":"api_reference/#autopy.core.action.ActionKeyboard","text":"","title":"ActionKeyboard"},{"location":"api_reference/#autopy.core.action.ActionKeyboard.ActionKeyboard","text":"\u952e\u76d8\u64cd\u4f5c","title":"ActionKeyboard"},{"location":"api_reference/#autopy.core.action.ActionKeyboard.ActionKeyboard.hotkey","text":"\u53d1\u9001\u70ed\u952e Examples: action: hotkey(\"ctrl\",\"c\") action: hotkey(\"alt\",\"tab\") Parameters: *keys: \u70ed\u952e\u7ec4\u5408\uff0c\u591a\u952e\u7ec4\u5408\u7528\u591a\u4e2a\u53c2\u6570\u8868\u793a Returns: None Source code in autopy\\core\\action\\actionkeyboard.py @staticmethod def hotkey ( * keys ): \"\"\" \u53d1\u9001\u70ed\u952e Examples: ```python action: hotkey(\"ctrl\",\"c\") ``` ```python action: hotkey(\"alt\",\"tab\") ``` Args: *keys: \u70ed\u952e\u7ec4\u5408\uff0c\u591a\u952e\u7ec4\u5408\u7528\u591a\u4e2a\u53c2\u6570\u8868\u793a Returns: None \"\"\" pyautogui . hotkey ( * keys )","title":"hotkey()"},{"location":"api_reference/#autopy.core.action.ActionKeyboard.ActionKeyboard.press","text":"\u70b9\u51fb\u7279\u5b9a\u7684\u952e Parameters: key_or_keys: str,List[str] \u2013 \u8868\u793a\u952e\u7684\u5b57\u7b26\u4e32\u6216\u8005\u5b57\u7b26\u4e32\u6570\u7ec4 interval: float \u2013 \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u7ec4\uff0c\u90a3\u4e48\u8fd9\u91cc\u8868\u793a\u591a\u4e2a\u6572\u51fb\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u662f\u79d2 Source code in autopy\\core\\action\\actionkeyboard.py @staticmethod def press ( key_or_keys , interval = 0 ): \"\"\" \u70b9\u51fb\u7279\u5b9a\u7684\u952e Args: key_or_keys (str,List[str]): \u8868\u793a\u952e\u7684\u5b57\u7b26\u4e32\u6216\u8005\u5b57\u7b26\u4e32\u6570\u7ec4 interval (float): \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u7ec4\uff0c\u90a3\u4e48\u8fd9\u91cc\u8868\u793a\u591a\u4e2a\u6572\u51fb\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u662f\u79d2 Returns: \"\"\" if interval == 0 : pyautogui . press ( key_or_keys ) else : pyautogui . press ( key_or_keys , interval )","title":"press()"},{"location":"api_reference/#autopy.core.action.ActionKeyboard.ActionKeyboard.type","text":"\u628a\u6307\u5b9a\u5b57\u7b26\u4e32\u4ee5\u952e\u76d8\u6572\u51fb\u7684\u5f62\u5f0f\u8f93\u5165 Parameters: str_to_type: str \u2013 \u8981\u8f93\u5165\u7684\u5b57\u7b26\u4e32 interval: float \u2013 \u6bcf\u4e2a\u8f93\u5165\u5b57\u7b26\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u662f\u79d2 Returns: None Source code in autopy\\core\\action\\actionkeyboard.py @staticmethod def type ( str_to_type , interval = 0 ): \"\"\" \u628a\u6307\u5b9a\u5b57\u7b26\u4e32\u4ee5\u952e\u76d8\u6572\u51fb\u7684\u5f62\u5f0f\u8f93\u5165 Args: str_to_type (str): \u8981\u8f93\u5165\u7684\u5b57\u7b26\u4e32 interval (float): \u6bcf\u4e2a\u8f93\u5165\u5b57\u7b26\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u662f\u79d2 Returns: None \"\"\" if interval == 0 : pyautogui . write ( str_to_type ) else : pyautogui . write ( str_to_type , interval )","title":"type()"},{"location":"api_reference/#autopy.core.action.ActionMouse","text":"","title":"ActionMouse"},{"location":"api_reference/#autopy.core.action.ActionMouse.MousePosition","text":"\u8868\u793a\u9f20\u6807\u4f4d\u7f6e\u7684\u6570\u636e\u7ed3\u6784 Attributes: Name Type Description x int x\u5750\u6807 y int y\u5750\u6807","title":"MousePosition"},{"location":"api_reference/#autopy.core.action.ActionMouse.click","text":"\u9f20\u6807\u70b9\u51fb\uff0c\u53ef\u4ee5\u6307\u5b9a\u70b9\u51fb\u7684\u4f4d\u7f6e Parameters: x: int \u2013 x\u5750\u6807 y: int \u2013 y\u5750\u6807 Returns: None Source code in autopy\\core\\action\\actionmouse.py def click ( x , y ): \"\"\" \u9f20\u6807\u70b9\u51fb\uff0c\u53ef\u4ee5\u6307\u5b9a\u70b9\u51fb\u7684\u4f4d\u7f6e Args: x (int): x\u5750\u6807 y (int): y\u5750\u6807 Returns: None \"\"\" pyautogui . click ( int ( x ), int ( y ))","title":"click()"},{"location":"api_reference/#autopy.core.action.ActionMouse.dbclick","text":"\u9f20\u6807\u53cc\u51fb\uff0c\u53ef\u4ee5\u6307\u5b9a\u70b9\u51fb\u7684\u4f4d\u7f6e Parameters: x: int \u2013 x\u5750\u6807 y: int \u2013 y\u5750\u6807 Returns: None Source code in autopy\\core\\action\\actionmouse.py def dbclick ( x , y ): \"\"\" \u9f20\u6807\u53cc\u51fb\uff0c\u53ef\u4ee5\u6307\u5b9a\u70b9\u51fb\u7684\u4f4d\u7f6e Args: x (int): x\u5750\u6807 y (int): y\u5750\u6807 Returns: None \"\"\" pyautogui . doubleClick ( int ( x ), int ( y ))","title":"dbclick()"},{"location":"api_reference/#autopy.core.action.ActionMouse.drag","text":"\u9f20\u6807\u4ece\u5f53\u524d\u4f4d\u7f6e\uff0c\u62d6\u62fd\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e Parameters: x: int \u2013 \u76ee\u6807\u4f4d\u7f6ex\u5750\u6807 y: int \u2013 \u76ee\u6807\u4f4d\u7f6ey\u5750\u6807 Returns: None Source code in autopy\\core\\action\\actionmouse.py def drag ( x , y ): \"\"\" \u9f20\u6807\u4ece\u5f53\u524d\u4f4d\u7f6e\uff0c\u62d6\u62fd\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e Args: x (int): \u76ee\u6807\u4f4d\u7f6ex\u5750\u6807 y (int): \u76ee\u6807\u4f4d\u7f6ey\u5750\u6807 Returns: None \"\"\" pyautogui . dragTo ( int ( x ), int ( y ), 0.5 )","title":"drag()"},{"location":"api_reference/#autopy.core.action.ActionMouse.move","text":"\u79fb\u52a8\u9f20\u6807\u6307\u9488\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e Parameters: x: int \u2013 x\u5750\u6807 y: int \u2013 y\u5750\u6807 Returns: None Source code in autopy\\core\\action\\actionmouse.py def move ( x , y ): \"\"\" \u79fb\u52a8\u9f20\u6807\u6307\u9488\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e Args: x (int): x\u5750\u6807 y (int): y\u5750\u6807 Returns: None \"\"\" pyautogui . moveTo ( int ( x ), int ( y ), duration = 0.25 )","title":"move()"},{"location":"api_reference/#autopy.core.action.ActionMouse.position","text":"\u83b7\u53d6\u9f20\u6807\u5f53\u524d\u4f4d\u7f6e Returns: MousePosition\u5bf9\u8c61\uff0c\u6709x,y\u4e24\u4e2a\u5c5e\u6027 Source code in autopy\\core\\action\\actionmouse.py def position (): \"\"\" \u83b7\u53d6\u9f20\u6807\u5f53\u524d\u4f4d\u7f6e Returns: MousePosition\u5bf9\u8c61\uff0c\u6709x,y\u4e24\u4e2a\u5c5e\u6027 \"\"\" pos = pyautogui . position () return MousePosition ( pos [ 0 ], pos [ 1 ])","title":"position()"},{"location":"api_reference/#autopy.core.action.ActionMouse.rightclick","text":"\u9f20\u6807\u53f3\u952e\u70b9\u51fb\uff0c\u53ef\u4ee5\u6307\u5b9a\u70b9\u51fb\u7684\u4f4d\u7f6e Parameters: x: int \u2013 x\u5750\u6807 y: int \u2013 y\u5750\u6807 Returns: None Source code in autopy\\core\\action\\actionmouse.py def rightclick ( x , y ): \"\"\" \u9f20\u6807\u53f3\u952e\u70b9\u51fb\uff0c\u53ef\u4ee5\u6307\u5b9a\u70b9\u51fb\u7684\u4f4d\u7f6e Args: x (int): x\u5750\u6807 y (int): y\u5750\u6807 Returns: None \"\"\" pyautogui . rightClick ( int ( x ), int ( y ))","title":"rightclick()"},{"location":"api_reference/#autopy.core.action.ActionMouse.scroll","text":"\u9f20\u6807\u6eda\u8f6e\u6eda\u52a8\u6307\u5b9a\u7684\u8ddd\u79bb Parameters: clicks: int \u2013 \u6eda\u52a8\u7684\u683c\u6570\uff0c\u6b63\u6570\u8868\u793a\u6eda\u52a8\u6761\u5411\u4e0a\uff0c\u8d1f\u6570\u8868\u793a\u6eda\u52a8\u6761\u5411\u4e0b Returns: None Source code in autopy\\core\\action\\actionmouse.py def scroll ( clicks ): \"\"\" \u9f20\u6807\u6eda\u8f6e\u6eda\u52a8\u6307\u5b9a\u7684\u8ddd\u79bb Args: clicks (int): \u6eda\u52a8\u7684\u683c\u6570\uff0c\u6b63\u6570\u8868\u793a\u6eda\u52a8\u6761\u5411\u4e0a\uff0c\u8d1f\u6570\u8868\u793a\u6eda\u52a8\u6761\u5411\u4e0b Returns: None \"\"\" pyautogui . scroll ( clicks )","title":"scroll()"},{"location":"api_reference/#autopy.core.action.ActionScreen","text":"","title":"ActionScreen"},{"location":"api_reference/#autopy.core.action.ActionScreen.ActionScreen","text":"","title":"ActionScreen"},{"location":"api_reference/#autopy.core.action.ActionScreen.ActionScreen.change_resolution","text":"\u6539\u53d8\u5c4f\u5e55\u5206\u8fa8\u7387 Parameters: params: Tuple[int,int] \u2013 \u6307\u5b9a\u5206\u8fa8\u7387\u7684\u5bbd\u548c\u9ad8 Returns: None Source code in autopy\\core\\action\\actionscreen.py @staticmethod def change_resolution ( params : tuple ): \"\"\" \u6539\u53d8\u5c4f\u5e55\u5206\u8fa8\u7387 Args: params (Tuple[int,int]): \u6307\u5b9a\u5206\u8fa8\u7387\u7684\u5bbd\u548c\u9ad8 Returns: None \"\"\" ( width , height ) = params dm = win32api . EnumDisplaySettings ( None , 0 ) dm . PelsWidth = width dm . PelsHeight = height dm . BitsPerPel = 32 dm . DisplayFixedOutput = 1 # 0:\u7f3a\u7701; 1:\u5c45\u4e2d; 2:\u62c9\u4f38 win32api . ChangeDisplaySettings ( dm , 0 )","title":"change_resolution()"},{"location":"api_reference/#autopy.core.action.ActionScreen.ActionScreen.pick_color","text":"\u83b7\u53d6\u5c4f\u5e55\u4e0a\u6307\u5b9a\u4f4d\u7f6e\u50cf\u7d20\u7684\u989c\u8272 Parameters: x: \u6307\u5b9a\u4f4d\u7f6ex\u5750\u6807 y: \u6307\u5b9a\u4f4d\u7f6ey\u5750\u6807 Returns: List[int] \u2013 \u957f\u5ea6\u4e3a4\u7684\u6574\u5f62\u6570\u7ec4\uff0c\u5206\u522b\u75280~255\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u8868\u793aR,G,B,A\u56db\u4e2a\u901a\u9053 Source code in autopy\\core\\action\\actionscreen.py @staticmethod def pick_color ( x , y ): \"\"\" \u83b7\u53d6\u5c4f\u5e55\u4e0a\u6307\u5b9a\u4f4d\u7f6e\u50cf\u7d20\u7684\u989c\u8272 Args: x: \u6307\u5b9a\u4f4d\u7f6ex\u5750\u6807 y: \u6307\u5b9a\u4f4d\u7f6ey\u5750\u6807 Returns: List[int]: \u957f\u5ea6\u4e3a4\u7684\u6574\u5f62\u6570\u7ec4\uff0c\u5206\u522b\u75280~255\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u8868\u793aR,G,B,A\u56db\u4e2a\u901a\u9053 \"\"\" return autogui . pixel ( x , y )","title":"pick_color()"},{"location":"api_reference/#autopy.core.action.ActionScreen.ActionScreen.pixel_matches_color","text":"\u68c0\u67e5\u7ed9\u5b9a\u7684\u989c\u8272\u548c\u5c4f\u5e55\u4e0a\u7279\u5b9a\u5750\u6807\u70b9\u7684\u989c\u8272\u662f\u5426\u5339\u914d Parameters: x: \u6307\u5b9a\u4f4d\u7f6ex\u5750\u6807 y: \u6307\u5b9a\u4f4d\u7f6ey\u5750\u6807 color_tuple: Tuple[int] \u2013 (R,G,B) \u7ec4\u6210\u7684\u989c\u8272\u503c tolerance: \u5bb9\u5fcd\u5ea6 Returns: bool \u2013 \u662f\u5426\u5339\u914d Source code in autopy\\core\\action\\actionscreen.py @staticmethod def pixel_matches_color ( x , y , color_tuple , tolerance = 0 ): \"\"\" \u68c0\u67e5\u7ed9\u5b9a\u7684\u989c\u8272\u548c\u5c4f\u5e55\u4e0a\u7279\u5b9a\u5750\u6807\u70b9\u7684\u989c\u8272\u662f\u5426\u5339\u914d Args: x: \u6307\u5b9a\u4f4d\u7f6ex\u5750\u6807 y: \u6307\u5b9a\u4f4d\u7f6ey\u5750\u6807 color_tuple (Tuple[int]): (R,G,B) \u7ec4\u6210\u7684\u989c\u8272\u503c tolerance: \u5bb9\u5fcd\u5ea6 Returns: bool: \u662f\u5426\u5339\u914d \"\"\" return autogui . pixelMatchesColor ( x , y , color_tuple , tolerance )","title":"pixel_matches_color()"},{"location":"api_reference/#autopy.core.action.ActionScreen.ActionScreen.snapshot","text":"\u6839\u636e\u8ddf\u5b9a\u7684ScreenRect\u533a\u57df\u622a\u56fe Parameters: rect: \u9075\u4ece\u4e00\u822c\u7cfb\u7edf\u5750\u6807\u7cfb\u7684\u77e9\u5f62\u533a\u57df(\u5de6\u4e0a\u89d2\u4e3a0,0\u70b9), autogui\u548cPillow\u90fd\u9002\u7528 Returns: \u8fd4\u56dePIL\u683c\u5f0f\u7684\u6307\u5b9a\u533a\u57df\u622a\u56fe Source code in autopy\\core\\action\\actionscreen.py @classmethod def snapshot ( cls , rect ): \"\"\" \u6839\u636e\u8ddf\u5b9a\u7684ScreenRect\u533a\u57df\u622a\u56fe Args: rect: \u9075\u4ece\u4e00\u822c\u7cfb\u7edf\u5750\u6807\u7cfb\u7684\u77e9\u5f62\u533a\u57df(\u5de6\u4e0a\u89d2\u4e3a0,0\u70b9), autogui\u548cPillow\u90fd\u9002\u7528 Returns: \u8fd4\u56dePIL\u683c\u5f0f\u7684\u6307\u5b9a\u533a\u57df\u622a\u56fe \"\"\" screen_shot = autogui . screenshot () # rect = rect.swap_top_bottom() crop_img = screen_shot . crop ( ( int ( float ( rect . left )), int ( float ( rect . top )), int ( float ( rect . right )), int ( float ( rect . bottom )))) return crop_img","title":"snapshot()"},{"location":"api_reference/#autopy.core.action.ActionScreen.ActionScreen.snapshot_cv","text":"\u6839\u636e\u8ddf\u5b9a\u7684ScreenRect\u533a\u57df\u622a\u56fe Parameters: rect: \u9075\u4ece\u4e00\u822c\u7cfb\u7edf\u5750\u6807\u7cfb\u7684\u77e9\u5f62\u533a\u57df(\u5de6\u4e0a\u89d2\u4e3a0,0\u70b9), autogui\u548copencv\u90fd\u9002\u7528 Returns: \u8fd4\u56deopencv\u683c\u5f0f\u7684\u6307\u5b9a\u533a\u57df\u622a\u56fe Source code in autopy\\core\\action\\actionscreen.py @classmethod def snapshot_cv ( cls , rect ): \"\"\" \u6839\u636e\u8ddf\u5b9a\u7684ScreenRect\u533a\u57df\u622a\u56fe Args: rect: \u9075\u4ece\u4e00\u822c\u7cfb\u7edf\u5750\u6807\u7cfb\u7684\u77e9\u5f62\u533a\u57df(\u5de6\u4e0a\u89d2\u4e3a0,0\u70b9), autogui\u548copencv\u90fd\u9002\u7528 Returns: \u8fd4\u56deopencv\u683c\u5f0f\u7684\u6307\u5b9a\u533a\u57df\u622a\u56fe \"\"\" pil_image = cls . snapshot ( rect ) return ActionImage . pil_to_cv ( pil_image )","title":"snapshot_cv()"},{"location":"api_reference/#autopy.core.action.ActionWindow","text":"","title":"ActionWindow"},{"location":"api_reference/#autopy.core.action.ActionWindow.ActionWindow","text":"","title":"ActionWindow"},{"location":"api_reference/#autopy.core.action.ActionWindow.ActionWindow.find_window","text":"\u6839\u636e\u7a97\u53e3\u7684class_name\u6216\u8005\u6807\u9898\uff0c\u67e5\u627e\u7a97\u53e3 Parameters: title: str \u2013 \u7a97\u53e3\u6807\u9898 win_class: str \u2013 \u7a97\u53e3class_name Returns: int,None \u2013 \u627e\u5230\u7684\u7a97\u53e3\u53e5\u67c4\uff08hwnd\uff09\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5219\u8fd4\u56deNone Source code in autopy\\core\\action\\actionwindow.py @classmethod def find_window ( cls , title = None , win_class = None ): \"\"\" \u6839\u636e\u7a97\u53e3\u7684class_name\u6216\u8005\u6807\u9898\uff0c\u67e5\u627e\u7a97\u53e3 Args: title (str): \u7a97\u53e3\u6807\u9898 win_class (str): \u7a97\u53e3class_name Returns: int,None: \u627e\u5230\u7684\u7a97\u53e3\u53e5\u67c4\uff08hwnd\uff09\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5219\u8fd4\u56deNone \"\"\" try : return win32gui . FindWindow ( win_class , title ) except Exception as ex : print ( 'error calling win32gui.FindWindow ' + str ( ex )) return None","title":"find_window()"},{"location":"api_reference/#autopy.core.action.ActionWindow.ActionWindow.get_current_window","text":"\u83b7\u53d6\u5f53\u524d\u7a97\u53e3\u53e5\u67c4 Returns: int \u2013 \u5f53\u524d\u7a97\u53e3\u53e5\u67c4\uff08hwnd\uff09 Source code in autopy\\core\\action\\actionwindow.py @classmethod def get_current_window ( cls ): \"\"\" \u83b7\u53d6\u5f53\u524d\u7a97\u53e3\u53e5\u67c4 Returns: int: \u5f53\u524d\u7a97\u53e3\u53e5\u67c4\uff08hwnd\uff09 \"\"\" return win32gui . GetForegroundWindow ()","title":"get_current_window()"},{"location":"api_reference/#autopy.core.action.ActionWindow.ActionWindow.get_current_window_title","text":"\u83b7\u53d6\u5f53\u524d\u7a97\u53e3\u6807\u9898 Returns: str \u2013 \u7a97\u53e3\u6807\u9898 Source code in autopy\\core\\action\\actionwindow.py @classmethod def get_current_window_title ( cls ): \"\"\" \u83b7\u53d6\u5f53\u524d\u7a97\u53e3\u6807\u9898 Returns: str: \u7a97\u53e3\u6807\u9898 \"\"\" return cls . get_window_title ( cls . get_current_window ())","title":"get_current_window_title()"},{"location":"api_reference/#autopy.core.action.ActionWindow.ActionWindow.get_window_class","text":"\u83b7\u53d6\u6307\u5b9a\u7a97\u53e3\u7684class name Parameters: hwnd: int \u2013 \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 Returns: str \u2013 \u7a97\u53e3class name(windows api\u4e2d\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u770b\u505awindow\u7cfb\u7edf\u5185\u90e8\u5bf9\u7a97\u53e3\u7684\u6807\u8bc6\u540d\uff09 Source code in autopy\\core\\action\\actionwindow.py @classmethod def get_window_class ( cls , hwnd ): \"\"\" \u83b7\u53d6\u6307\u5b9a\u7a97\u53e3\u7684class name Args: hwnd (int): \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 Returns: str: \u7a97\u53e3class name(windows api\u4e2d\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u770b\u505awindow\u7cfb\u7edf\u5185\u90e8\u5bf9\u7a97\u53e3\u7684\u6807\u8bc6\u540d\uff09 \"\"\" return win32gui . GetClassName ( hwnd )","title":"get_window_class()"},{"location":"api_reference/#autopy.core.action.ActionWindow.ActionWindow.get_window_rect","text":"\u83b7\u53d6\u6307\u5b9a\u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f Parameters: hwnd: int \u2013 \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 Returns: ScreenRect \u2013 \u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f Source code in autopy\\core\\action\\actionwindow.py @classmethod def get_window_rect ( cls , hwnd ): \"\"\" \u83b7\u53d6\u6307\u5b9a\u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f Args: hwnd (int): \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 Returns: ScreenRect: \u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f \"\"\" left , top , right , bottom = win32gui . GetWindowRect ( hwnd ) return ScreenRect ( left , right , top , bottom )","title":"get_window_rect()"},{"location":"api_reference/#autopy.core.action.ActionWindow.ActionWindow.get_window_title","text":"\u83b7\u53d6\u6307\u5b9a\u7a97\u53e3\u6807\u9898 Parameters: hwnd: int \u2013 \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 Returns: str \u2013 \u7a97\u53e3\u6807\u9898 Source code in autopy\\core\\action\\actionwindow.py @classmethod def get_window_title ( cls , hwnd ): \"\"\" \u83b7\u53d6\u6307\u5b9a\u7a97\u53e3\u6807\u9898 Args: hwnd (int): \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 Returns: str: \u7a97\u53e3\u6807\u9898 \"\"\" return win32gui . GetWindowText ( hwnd )","title":"get_window_title()"},{"location":"api_reference/#autopy.core.action.ActionWindow.ActionWindow.set_current_window","text":"\u5c06\u6307\u5b9a\u7684\u7a97\u53e3\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7a97\u53e3 Parameters: hwnd: int \u2013 \u6307\u5b9a\u7684\u7a97\u53e3\u53e5\u67c4 Returns: None Source code in autopy\\core\\action\\actionwindow.py @classmethod def set_current_window ( cls , hwnd ): \"\"\" \u5c06\u6307\u5b9a\u7684\u7a97\u53e3\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7a97\u53e3 Args: hwnd (int): \u6307\u5b9a\u7684\u7a97\u53e3\u53e5\u67c4 Returns: None \"\"\" if win32gui . IsIconic ( hwnd ): # \u5982\u679c\u7a97\u53e3\u88ab\u6700\u5c0f\u5316\u4e86\uff0c\u5148\u6062\u590d win32gui . ShowWindow ( hwnd , win32con . SW_RESTORE ) win32gui . SetForegroundWindow ( hwnd )","title":"set_current_window()"},{"location":"api_reference/#autopy.core.action.ActionWindow.ActionWindow.set_window_pos","text":"\u8bbe\u7f6e\u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f Parameters: hwnd: int \u2013 \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 x: int \u2013 \u7a97\u53e3\u5de6\u4e0a\u89d2x\u5750\u6807 (int): \u7a97\u53e3\u5de6\u4e0a\u89d2y\u5750\u6807 width: int \u2013 \u7a97\u53e3\u5bbd\u5ea6 height: int \u2013 \u7a97\u5bbd\u9ad8\u5ea6 Source code in autopy\\core\\action\\actionwindow.py @classmethod def set_window_pos ( cls , hwnd , x , y , width , height ): \"\"\" \u8bbe\u7f6e\u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f Args: hwnd (int): \u6307\u5b9a\u7a97\u53e3\u53e5\u67c4 x (int): \u7a97\u53e3\u5de6\u4e0a\u89d2x\u5750\u6807 (int): \u7a97\u53e3\u5de6\u4e0a\u89d2y\u5750\u6807 width (int): \u7a97\u53e3\u5bbd\u5ea6 height (int): \u7a97\u5bbd\u9ad8\u5ea6 Returns: \"\"\" win32gui . SetWindowPos ( hwnd , win32con . HWND_TOPMOST , x , y , width , height , win32con . SWP_SHOWWINDOW )","title":"set_window_pos()"},{"location":"api_reference/#autopy.core.data","text":"","title":"data"},{"location":"api_reference/#autopy.core.data.Action","text":"","title":"Action"},{"location":"api_reference/#autopy.core.data.Action.Action","text":"\u6267\u884c\u64cd\u4f5c\u57fa\u7840\u7c7b\uff0c\u6709Evaluation\u548cExecution\u4e24\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u5bf9\u5e94\u6709\u8fd4\u56de\u7ed3\u679c\u548c\u6ca1\u6709\u8fd4\u56de\u7ed3\u679c\u7684\u64cd\u4f5c\u3002\u5728\u672c\u57fa\u7840\u7c7b\u4e2d\uff0c\u8fd8\u5b9a\u4e49\u4e86\u6240\u6709\u5177\u4f53\u7684\u64cd\u4f5c\u65b9\u6cd5\u540d\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u5728Action\u7c7b\u578b\u7684\u914d\u7f6e\u8282\u70b9\u4e2d\u76f4\u63a5\u8c03\u7528\u3002\u5177\u4f53\u7684\u53c2\u6570\u4f1a\u5728\u5bf9\u5e94\u7684\u7c7b\u4e2d\u4ecb\u7ecd Attributes: Name Type Description move ActionMouse.move \u79fb\u52a8\u9f20\u6807\uff0c\u4f8b\u5982 move(354,267) raise_error ActionError.trigger \u5f15\u53d1\u5f02\u5e38\uff0c\u4f8b\u5982raise_error('\u9489\u9489\u4e0d\u662f\u5f53\u524d\u9875\u9762') click ActionMouse.click \u70b9\u51fb\u9f20\u6807\uff0c\u4f8b\u5982 click(354,267)\uff0cclick\u6267\u884c\u7684\u65f6\u5019\uff0c\u9f20\u6807\u6307\u9488\u4e5f\u4f1a\u88ab\u79fb\u52a8\u5230\u6307\u5b9a\u4f4d\u7f6e dbclick ActionMouse.dbclick \u53cc\u51fb\u9f20\u6807\uff0c\u4f8b\u5982 dbclick(354,267) rightclick ActionMouse.rightclick \u53f3\u952e\u70b9\u51fb\u9f20\u6807\uff0c\u4f8b\u5982 rightclick(354,267) hotkey ActionKeyboard.hotkey \u70b9\u51fb\u952e\u76d8\u70ed\u952e\uff0c\u4f8b\u5982 hotkey(\"alt\",\"tab\") type ActionKeyboard.type \u8f93\u5165\u5b57\u7b26\u4e32\uff08\u6a21\u62df\u952e\u76d8\u8f93\u5165\uff0c\u53c2\u6570\u662f\u6574\u4e2a\u5b57\u7b26\u4e32\uff09\uff0c\u4f8b\u5982 type(\"\u5f20\u4e09\") press ActionKeyboard.press \u70b9\u51fb\u952e\u76d8\uff08\u6307\u5b9a\u4e00\u4e2a\u952e\uff09\uff0c\u4f8b\u5982 press(\"a\"), press(\"ctrl\", 2) ocr ActionImage.ocr \u8bc6\u522b\u7ed9\u5b9a\u56fe\u7247\u4e2d\u7684\u6587\u5b57\uff0c\u4f8b\u5982 x = ocr(week_report.clip)\uff0c\u8fd9\u91ccweek_report.clip\u662f\u4e0a\u4e00\u6b65\u622a\u56fe\u5f97\u5230\u7684\u56fe\u50cf\u6570\u636e\uff0cx\u662f\u8bc6\u522b\u51fa\u6765\u7684\u6587\u5b57 print print \u6253\u5370\u4fe1\u606f\u5230\u63a7\u5236\u53f0\uff0c\u5c31\u662fpython\u5185\u7f6e\u7684print\u65b9\u6cd5 find_template ActionImage.find_one_template \u5728\u6307\u5b9a\u56fe\u50cf\u4e2d\uff0c\u67e5\u627e\u53e6\u5916\u4e00\u5e45\u56fe\u50cf\uff0c\u4f8b\u5982 find_template(snapshot_image, week_report.clip).rect\uff0c\u8fd9\u91cc\u8981\u4ece\u56fe\u50cfsnapshot_image\u4e2d\u627e\u5230\u56fe\u50cfweek_report.clip\uff0c \u8fd4\u56de\u7ed3\u679c\u91cc\u6709\u6709\u4e2arect\u5c5e\u6027\uff0c\u6807\u8bc6\u4e86\u627e\u5230\u7684\u7247\u6bb5\u5728\u5c4f\u5e55\u4e0a\u7684\u4f4d\u7f6e snapshot ActionScreen.snapshot_cv \u5c4f\u5e55\u622a\u56fe\uff0c\u4f8b\u5982 snapshot(snapshot_rect)\uff0c\u4f20\u5165\u4e00\u4e2a\u8868\u793a\u5c4f\u5e55\u77e9\u5f62\u4f4d\u7f6e\u7684ScreenRect\u5bf9\u8c61\uff0c\u8fd4\u56de\u5bf9\u5e94\u4f4d\u7f6e\u7684\u56fe\u50cf log_image ActionImage.log_image \u4fdd\u5b58\u56fe\u7247\u5230\u6587\u4ef6\uff0c\u4f8b\u5982 log_image(\"snapshot\", snapshot_image)\uff0c\u628a\u56fe\u50cf\u4fdd\u5b58\u5230\u6307\u5b9a\u6587\u4ef6 ScreenRect ScreenRect \u65b0\u5efa\u4e00\u4e2aScreenRect\u5bf9\u8c61\uff0c\u4f8b\u5982 snapshot_rect = ScreenRect(65, 298, 221, 761)\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u63a5\u53d74\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u662fleft, right, top, bottom wait time.sleep \u7b49\u5f85\u6307\u5b9a\u65f6\u95f4\uff08\u79d2\uff09\uff0c\u4f8b\u5982 wait(0.5)\uff0c\u6267\u884c\u5230\u8fd9\u91cc\u4f1a\u7b49\u5f85\uff08\u4f11\u7720\uff09\u6307\u5b9a\u7684\u79d2\u6570 copy ActionClipboard.copy \u590d\u5236\uff0c\u4f8b\u5982 copy(x)\uff0c\u628a\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u590d\u5236\u5230\u526a\u8d34\u677f paste ActionClipboard.paste \u7c98\u8d34\uff0c\u4f8b\u5982 x = paste(), \u628a\u526a\u8d34\u677f\u91cc\u7684\u5185\u5bb9\u53d8\u6210\u5b57\u7b26\u4e32\u8fd4\u56de\uff08\u6ce8\u610f\u5e76\u4e0d\u662f\u5728\u754c\u9762\u5f53\u524d\u4f4d\u7f6e\u7c98\u8d34\uff0c\u5982\u679c\u9700\u8981\u8fd9\u4e2a\u6548\u679c\uff0c\u53ef\u4ee5\u8c03\u7528 hotkey(\"ctrl\",\"v\") \uff09 locate_state ActionError.locate_state \u5b9a\u4f4d\u5f53\u524d\u5904\u4e8e\u54ea\u4e2aState\uff0c\u4f8b\u5982 locate_state('\u6ca1\u6709\u627e\u5230\u9489\u9489\u7a97\u53e3')\uff0c\u6b64\u65f6\u7a0b\u5e8f\u4f1a\u4e2d\u6b62\u6b63\u5e38\u7684\u72b6\u6001\u8fc1\u79fb\uff0c\u800c\u662f\u904d\u5386\u5f53\u524d\u72b6\u6001\u5c42\u7ea7\uff0c\u67e5\u627e\u6709\u53ef\u80fd\u5904\u4e8e\u54ea\u4e2a\u72b6\u6001\uff0c\u5e76\u8df3\u8f6c\u5230\u90a3\u4e2a\u72b6\u6001\u7ee7\u7eed\u6267\u884c\uff1b\u53c2\u6570\u5b57\u7b26\u4e32\u4f1a\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff0c set_window_pos ActionWindow.set_window_pos \u8bbe\u7f6e\u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\uff0c\u4f8b\u5982 set_window_pos(find_result.hwnd, 0, 0, 1024, 768)\uff0c\u8fd9\u91cc\u7684hwnd\u901a\u5e38\u662fWindowDetection\u8fd4\u56de\u7684\u7a97\u53e3\u53e5\u67c4\uff0c\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570\uff0c\u6307\u5b9a\u7a97\u53e3\u7684top,left,width,height\u5750\u6807","title":"Action"},{"location":"api_reference/#autopy.core.data.Action.Evaluation","text":"Action\u64cd\u4f5c\u7c7b\u7684\u5b50\u7c7b\uff0c\u6267\u884c\u4ee5\u540e\u4f1a\u6709\u8fd4\u56de\u503c","title":"Evaluation"},{"location":"api_reference/#autopy.core.data.Action.Execution","text":"Action\u64cd\u4f5c\u7c7b\u7684\u5b50\u7c7b\uff0c\u6267\u884c\u4ee5\u540e\u6ca1\u6709\u8fd4\u56de\u503c","title":"Execution"},{"location":"api_reference/#autopy.core.data.AutoBase","text":"","title":"AutoBase"},{"location":"api_reference/#autopy.core.data.AutoBase.AutoBase","text":"\u6267\u884c\u68c0\u6d4b\u7c7b\u7684\u57fa\u7840\u7c7b\u3002\u7528\u4e8e\u6307\u5b9a\u4e00\u4e9b\u901a\u7528\u914d\u7f6e Attributes: Name Type Description debug bool \u8868\u793a\u6267\u884c\u68c0\u6d4b\u7684\u65f6\u5019\uff0c\u662f\u5426\u8981\u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f\uff0c\u7f3a\u7701\u4e3aFalse","title":"AutoBase"},{"location":"api_reference/#autopy.core.data.Find","text":"","title":"Find"},{"location":"api_reference/#autopy.core.data.Find.Find","text":"\u7528\u4e8e\u67e5\u627e\u7684\u57fa\u7840\u914d\u7f6e\uff0c\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u67e5\u627e\u6a21\u5f0f\uff0c\u5728State\u8282\u70b9\u4e2d\uff0c\u5b83\u5982\u679c\u662fcheck\u5c5e\u6027\uff0c\u5219\u4e0d\u4fdd\u5b58\u67e5\u627e\u7ed3\u679c\uff0c\u5982\u679c\u662ffind\u5c5e\u6027\uff0c\u5219\u628a\u67e5\u627e\u7ed3\u679c\uff0c\u4e34\u65f6\u5b58\u5165find_result Attributes: Name Type Description image ImageDetection) \u56fe\u50cf\u68c0\u6d4b\uff0c\u5728\u5f53\u524d\u9875\u9762\u4e2d\u627e\u6307\u5b9a\u56fe\u50cf\u7247\u6bb5\uff0c\u4e0d\u4e00\u5b9a\u8981\u5b8c\u5168\u4e00\u81f4\uff0c\u53ef\u4ee5\u6307\u5b9a\u76f8\u4f3c\u5ea6 ocr OcrDetection) \u6587\u672c\u68c0\u6d4b\uff0c\u5728\u5f53\u524d\u9875\u9762\u7684\u6307\u5b9a\u4f4d\u7f6e\u505aOCR\u8bc6\u522b\uff0c\u7136\u540e\u67e5\u770b\u662f\u5426\u6709\u6307\u5b9a\u7684\u6587\u672c color ColorDetection) \u989c\u8272\u68c0\u6d4b\uff0c\u5728\u5f53\u524d\u9875\u9762\u7684\u6307\u5b9a\u50cf\u7d20\u4f4d\u7f6e\uff0c\u67e5\u770b\u662f\u5426\u7b26\u5408\u5b9a\u4e49\u7684\u989c\u8272 window WindowDetection) \u7a97\u53e3\u68c0\u6d4b\uff0c\u5728\u5f53\u524d\u9875\u9762\u67e5\u627e\u6307\u5b9atitle\u6216\u8005name\u7684\u7a97\u53e3 scroll Scroll) \u67e5\u627e\u7684\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u627e\u5230\uff0c\u5c31\u6eda\u52a8\u5f53\u524d\u7a97\u53e3\uff0c\u7ee7\u7eed\u67e5\u627e fail_action Execution) \u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u9700\u8981\u6267\u884c\u7684\u64cd\u4f5c find_all bool) \u662f\u5426\u67e5\u627e\u6240\u6709\u7b26\u5408\u68c0\u6d4b\u6761\u4ef6\u7684\u7ed3\u679c\uff0c\u7f3a\u7701\u4e3aFalse\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3aTrue\uff0c\u90a3\u4e48find_result\u5c31\u662f\u4e00\u4e2a\u5217\u8868","title":"Find"},{"location":"api_reference/#autopy.core.data.Misc","text":"","title":"Misc"},{"location":"api_reference/#autopy.core.data.Misc.State","text":"\u72b6\u6001\u8282\u70b9\uff0c\u7528\u4e8e\u914d\u7f6e\u754c\u9762\u6d41\u4e2d\u4e00\u4e2a\u7279\u5b9a\u7684\u9875\u9762 Attributes: Name Type Description name str \u72b6\u6001\uff08\u9875\u9762\uff09\u540d\u79f0 id int \u72b6\u6001\u552f\u4e00\u6807\u8bc6 check Find \u68c0\u67e5\u662f\u5426\u771f\u5c5e\u4e8e\u5f53\u524d\u9875\u9762 find Find \u5728\u5f53\u524d\u9875\u9762\u4e2d\u67e5\u627e\u7279\u5b9a\u5143\u7d20\u6216\u8005\u7247\u6bb5 action Action \u8fdb\u5165\u5f53\u524d\u9875\u9762\u72b6\u6001\u540e\uff0c\u4f1a\u91c7\u53d6\u4ec0\u4e48\u64cd\u4f5c\uff08\u6bd4\u5982\u9f20\u6807\u70b9\u51fb\uff09\uff0c\u4f46\u4e0d\u4f1a\u5f15\u8d77\u72b6\u6001\u8fc1\u79fb\uff0c\u8fd9\u91cc\u53ef\u4ee5\u662f\u4e00\u4e2a\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u662f\u591a\u4e2a\uff1b\u5982\u679c\u9700\u8981\u591a\u4e2a\u64cd\u4f5c\uff0c\u5c31\u914d\u7f6e\u4e3a\u5217\u8868\uff0c\u64cd\u4f5c\u4f1a\u6309\u5217\u8868\u987a\u5e8f\u6267\u884c transition Transition \u72b6\u6001\u8fc1\u79fb\u914d\u7f6e foreach ForEach \u5728\u5f53\u524d\u72b6\u6001\u4e0b\uff0c\u9488\u5bf9\u7279\u5b9a\u6570\u636e\u505a\u5faa\u73af","title":"State"},{"location":"api_reference/#autopy.core.data.Misc.Transition","text":"\u72b6\u6001\u8fc1\u79fb\u914d\u7f6e\u8282\u70b9\uff0c\u6307\u5b9a\u4ec0\u4e48\u52a8\u4f5c\u4f1a\u89e6\u53d1\u8fc1\u79fb","title":"Transition"},{"location":"api_reference/#autopy.core.data.Project","text":"","title":"Project"},{"location":"api_reference/#autopy.core.data.Project.Project","text":"\u914d\u7f6e\u6839\u8282\u70b9\uff0c\u5bf9\u5e94\u81ea\u52a8\u5316\u9879\u76ee\u7684\u57fa\u672c\u4fe1\u606f Attributes: Name Type Description name str \u9879\u76ee\u540d\u79f0 ver int \u6570\u5b57\u7248\u672c\u53f7 screen_width int \u5c4f\u5e55\u5bbd\u5ea6\uff08\u5982\u679c\u8bbe\u7f6e\u4e86\u8fd9\u4e2a\u5c5e\u6027\uff0c\u9879\u76ee\u8fd0\u884c\u65f6\u4f1a\u9996\u5148\u8c03\u6574\u5206\u8fa8\u7387\uff09 screen_height int \u5c4f\u5e55\u9ad8\u5ea6\uff08\u5982\u679c\u8bbe\u7f6e\u4e86\u8fd9\u4e2a\u5c5e\u6027\uff0c\u9879\u76ee\u8fd0\u884c\u65f6\u4f1a\u9996\u5148\u8c03\u6574\u5206\u8fa8\u7387\uff09 states List[State] \u72b6\u6001\u5217\u8868\uff0c\u9879\u76ee\u542f\u52a8\u540e\uff0c\u5c06\u4ece\u7b2c\u4e00\u4e2a\u72b6\u6001\u5f00\u59cb\u6267\u884c","title":"Project"},{"location":"api_reference/#autopy.core.detection","text":"","title":"detection"},{"location":"api_reference/#autopy.core.detection.ColorDetection","text":"","title":"ColorDetection"},{"location":"api_reference/#autopy.core.detection.ColorDetection.ColorDetection","text":"\u989c\u8272\u68c0\u6d4b\uff0c\u67e5\u770b\u5f53\u524d\u9875\u9762\u4e0a\uff0c\u6307\u5b9a\u4f4d\u7f6e\u7684\u50cf\u7d20\uff0c\u662f\u5426\u6ee1\u8db3\u6307\u5b9a\u7684\u989c\u8272\u503c\u3002 Examples: check: color: pos: (12,92) color: (209, 211, 213) fail_action: locate_state('\u5f53\u524d\u9875\u9762\u6ca1\u6709\u68c0\u6d4b\u5230\u6307\u5b9a\u989c\u8272') Attributes: Name Type Description pos Tuple[int,int] \u50cf\u7d20\u5750\u6807\u4f4d\u7f6e color Tuple[int,int] rgb\u8868\u793a\u7684\u989c\u8272\u503c\uff0c3\u7ec40~255\u4e4b\u95f4\u7684\u6570\u503c tolerance int \u5bb9\u5fcd\u5ea6\uff0crgb\u4e09\u8272\u5dee\u7edd\u5bf9\u503c\u4e4b\u548c\uff0c\u5982\u679c\u5c0f\u4e8e\u5bb9\u5fcd\u5ea6\uff0c\u5c31\u8ba4\u4e3a\u989c\u8272\u76f8\u540c","title":"ColorDetection"},{"location":"api_reference/#autopy.core.detection.Detection","text":"","title":"Detection"},{"location":"api_reference/#autopy.core.detection.Detection.Detection","text":"\u68c0\u6d4b\u57fa\u7840\u7c7b\uff0c\u6709ColorDetection, ImageDetection, OcrDetection, WindowDetection\u7b49\u5b50\u7c7b\uff0c\u7528\u4e8e\u68c0\u6d4b\u9875\u9762\u4e0a\u7684\u7279\u5b9a\u5185\u5bb9\u3002","title":"Detection"},{"location":"api_reference/#autopy.core.detection.ImageDetection","text":"","title":"ImageDetection"},{"location":"api_reference/#autopy.core.detection.ImageDetection.ImageDetection","text":"\u56fe\u50cf\u68c0\u6d4b\uff0c\u5728\u5f53\u524d\u9875\u9762\u7684\u6307\u5b9a\u8303\u56f4\u5185\uff0c\u67e5\u627e\u5339\u914d\u7684\u56fe\u50cf\u3002\u5982\u679c\u627e\u5230\u4e86\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2aresult\u7ed3\u6784\uff0c Examples: # State\u7684\u4e00\u4e2a\u5c5e\u6027 image: snapshot: !rect l:65, r:298, t:221, b:761 template: auto_dingding/work_report_text_snippet.png confidence: 0.8 keep_clip: result.rect_on_image.snap_left(45) Attributes: Name Type Description snapshot ScreenRect \u5c4f\u5e55\u622a\u56fe\u4f4d\u7f6e\uff0c\u9650\u5b9a\u67e5\u627e\u8303\u56f4\uff0c\u53ef\u4ee5\u6307\u5b9a\u5f97\u5927\u4e00\u4e9b\uff0c\u7a0b\u5e8f\u4f1a\u5728\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e\u56fe\u50cf template str \u8981\u67e5\u627e\u7684\u56fe\u50cf\u6a21\u677f\u6587\u4ef6\uff08\u652f\u6301\u76f8\u5bf9\u8def\u5f84\uff09 confidence float \u7f6e\u4fe1\u5ea6\uff0c\u67e5\u627e\u56fe\u50cf\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u9700\u8981\u4e25\u683c\u4e00\u81f4\uff0c\u7a0b\u5e8f\u4f1a\u6a21\u7cca\u5339\u914d\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u7f6e\u4fe1\u5ea6\uff080 ~ 1\u4e4b\u95f4\u7684\u4e00\u4e2a\u6570\u503c\uff09\uff0c\u7f6e\u4fe1\u5ea6\u5927\u4e8e\u7ed9\u5b9a\u7684\u6570\u503c\uff0c\u624d\u4f1a\u8ba4\u4e3a\u627e\u5230\u4e86 keep_clip Action.Evaluation \u6839\u636e\u8fd4\u56de\u7ed3\u679c\uff0c\u989d\u5916\u4fdd\u6301\u4e00\u4e2a\u622a\u56fe\u7247\u6bb5\uff08\u6bd4\u5982\u5df2\u7ecf\u67e5\u5230\u56fe\u50cf\u5de6\u4fa7100\u4e2a\u50cf\u7d20\u7684\u533a\u57df\uff09 result: rect_on_image: \u7ed3\u679c\u56fe\u50cf\u5728\u6307\u5b9a\u533a\u57df\u5185\u7684\u76f8\u5bf9\u4f4d\u7f6e rect_on_screen: \u7ed3\u679c\u56fe\u50cf\u5728\u5c4f\u5e55\u4e0a\u7684\u4f4d\u7f6e image: \u7ed3\u679c\u56fe\u50cf clip: \u989d\u5916\u622a\u53d6\u7684\u56fe\u50cf\u7247\u6bb5 clip_on_image: clip\u56fe\u50cf\u5728\u6307\u5b9a\u533a\u57df\u5185\u7684\u76f8\u5bf9\u4f4d\u7f6e clip_on_screen: clip\u56fe\u50cf\u5728\u5c4f\u5e55\u4e0a\u7684\u4f4d\u7f6e","title":"ImageDetection"},{"location":"api_reference/#autopy.core.detection.ImageDetection.ImageDetection.image_in","text":"\u68c0\u67e5\u4e24\u5e45\u56fe\u662f\u5426\u76f8\u4f3c :param min_confidence: \u6700\u4f4e\u53ef\u4fe1\u5ea6, \u4e0d\u8db3\u8fd9\u4e2a\u53ef\u4fe1\u5ea6\u7684\u7ed3\u679c\u5c06\u88ab\u5ffd\u7565 :param find_all: \u662f\u5426\u67e5\u627e\u6240\u6709\u7ed3\u679c,\u5982\u679c\u4e3aFalse, \u90a3\u4e48\u53ea\u8fd4\u56de\u7b2c\u4e00\u4e2a :param template_file_path: \u8981\u67e5\u627e\u7684\u56fe\u6587\u4ef6\u8def\u5f84\u4f4d\u7f6e :param big_image: \u5927\u56fe :return:\u76f8\u4f3c\u5ea6\uff0c\u5b8c\u5168\u76f8\u540c\u662f1\uff0c\u5b8c\u5168\u4e0d\u540c\u662f0 \u76ee\u6807\u56fe\u50cf\u9700\u8981\u662fpillow\u683c\u5f0f\u7684\uff0c\u5c06\u5728\u51fd\u6570\u4e2d\u88ab\u8f6c\u6362\u4e3aopencv\u683c\u5f0f\u7684\uff0c\u6700\u540e\u7528aircv\u7684find_template\u65b9\u6cd5\u6bd4\u8f83\u662f\u5426\u76f8\u4f3c Source code in autopy\\core\\detection\\imagedetection.py def image_in ( self , template_file_path , big_image , min_confidence , find_all ): \"\"\" \u68c0\u67e5\u4e24\u5e45\u56fe\u662f\u5426\u76f8\u4f3c :param min_confidence: \u6700\u4f4e\u53ef\u4fe1\u5ea6, \u4e0d\u8db3\u8fd9\u4e2a\u53ef\u4fe1\u5ea6\u7684\u7ed3\u679c\u5c06\u88ab\u5ffd\u7565 :param find_all: \u662f\u5426\u67e5\u627e\u6240\u6709\u7ed3\u679c,\u5982\u679c\u4e3aFalse, \u90a3\u4e48\u53ea\u8fd4\u56de\u7b2c\u4e00\u4e2a :param template_file_path: \u8981\u67e5\u627e\u7684\u56fe\u6587\u4ef6\u8def\u5f84\u4f4d\u7f6e :param big_image: \u5927\u56fe :return:\u76f8\u4f3c\u5ea6\uff0c\u5b8c\u5168\u76f8\u540c\u662f1\uff0c\u5b8c\u5168\u4e0d\u540c\u662f0 \u76ee\u6807\u56fe\u50cf\u9700\u8981\u662fpillow\u683c\u5f0f\u7684\uff0c\u5c06\u5728\u51fd\u6570\u4e2d\u88ab\u8f6c\u6362\u4e3aopencv\u683c\u5f0f\u7684\uff0c\u6700\u540e\u7528aircv\u7684find_template\u65b9\u6cd5\u6bd4\u8f83\u662f\u5426\u76f8\u4f3c \"\"\" if isinstance ( big_image , PIL . Image . Image ): image_current = ActionImage . pil_to_cv ( big_image ) else : image_current = big_image ActionImage . log_image ( 'current' , image_current , debug = self . debug ) image_template = ActionImage . load_from_file ( template_file_path ) ActionImage . log_image ( 'template' , image_template , debug = self . debug ) if find_all : result_list = ActionImage . find_all_template ( image_current , image_template , min_confidence ) # if self.debug: # for result in result_list: # rect = result.rect # self.log_image('match', image_current[rect.top:rect.bottom, rect.left:rect.right]) return result_list else : result = ActionImage . find_one_template ( image_current , image_template , min_confidence ) if self . debug : print ( 'image detection result: {} , {} ' . format ( result . confidence if result is not None else None , result . rect if result is not None else None )) return result","title":"image_in()"},{"location":"api_reference/#autopy.core.detection.OcrDetection","text":"","title":"OcrDetection"},{"location":"api_reference/#autopy.core.detection.OcrDetection.OcrDetection","text":"\u6587\u672c\u68c0\u6d4b\uff0c\u5728\u5f53\u524d\u9875\u9762\u7684\u6307\u5b9a\u8303\u56f4\u5185\uff0c\u9996\u5148\u7528OCR\u8bc6\u522b\u6587\u5b57\uff0c\u67e5\u627e\u662f\u5426\u4e0e\u7ed9\u5b9a\u6587\u672c\u5339\u914d\u3002\u5982\u679c\u8bc6\u522b\u6587\u672c\u548c\u7ed9\u5b9a\u6587\u672c\u7684\u5339\u914d\u5ea6\uff0c\u5927\u4e8e\u7ed9\u5b9a\u503c\uff0c\u5219\u8ba4\u4e3a\u627e\u5230\u4e86\uff0c\u5e76\u4e14\u5c06\u5176\u8fd4\u56de Examples: # State\u7684\u4e00\u4e2a\u5c5e\u6027 ocr: snapshot: !rect l:75, r:137, t:129, b:157 text: \"\u770b\u65e5\u5fd7\" Attributes: Name Type Description snapshot ScreenRect \u5c4f\u5e55\u622a\u56fe\u4f4d\u7f6e\uff0c\u9650\u5b9a\u67e5\u627e\u8303\u56f4\uff0c\u53ef\u4ee5\u6307\u5b9a\u5f97\u5927\u4e00\u4e9b\uff0c\u7a0b\u5e8f\u4f1a\u5728\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e\u56fe\u50cf text str \u8981\u67e5\u627e\u7684\u6587\u672c\u5b57\u7b26\u4e32 confidence float \u7f6e\u4fe1\u5ea6\uff0c\u67e5\u627e\u6587\u672c\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u9700\u8981\u4e25\u683c\u4e00\u81f4\uff0c\u7a0b\u5e8f\u4f1a\u6a21\u7cca\u5339\u914d\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u7f6e\u4fe1\u5ea6\uff080 ~ 1\u4e4b\u95f4\u7684\u4e00\u4e2a\u6570\u503c\uff09\uff0c\u7f6e\u4fe1\u5ea6\u5927\u4e8e\u7ed9\u5b9a\u7684\u6570\u503c\uff0c\u624d\u4f1a\u8ba4\u4e3a\u627e\u5230\u4e86 result: \u5982\u679c\u627e\u5230\u4e86\uff0c\u5c31\u8fd4\u56deOCR\u8bc6\u522b\u7684\u6587\u672c\u672c\u8eab\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u8fd4\u56deNone","title":"OcrDetection"},{"location":"api_reference/#autopy.core.detection.OcrDetection.OcrDetection.text_similar","text":"\u68c0\u67e5\u6307\u5b9a\u56fe\u50cf\u4e2d\u662f\u5426\u5305\u542b\u7279\u5b9a\u7684\u6587\u5b57 :param source_text: \u8981\u67e5\u627e\u7684\u6587\u5b57 :param target_pillow_image: \u76ee\u6807\u56fe\u50cf\uff0c\u51fd\u6570\u5c06\u4ece\u8fd9\u4e2a\u56fe\u50cf\u63d0\u53d6\u6587\u5b57\uff0c :return:\u76f8\u4f3c\u5ea6\uff0c\u5b8c\u5168\u76f8\u540c\u662f1\uff0c\u5b8c\u5168\u4e0d\u540c\u662f0\uff0c\u5176\u4ed6\u662f source_text \u4e0e\u8bc6\u522b\u51fa\u6765\u7684\u6587\u5b57\u7684\u6bd4\u4f8b Source code in autopy\\core\\detection\\ocrdetection.py def text_similar ( self , source_text , target_pillow_image ): \"\"\" \u68c0\u67e5\u6307\u5b9a\u56fe\u50cf\u4e2d\u662f\u5426\u5305\u542b\u7279\u5b9a\u7684\u6587\u5b57 :param source_text: \u8981\u67e5\u627e\u7684\u6587\u5b57 :param target_pillow_image: \u76ee\u6807\u56fe\u50cf\uff0c\u51fd\u6570\u5c06\u4ece\u8fd9\u4e2a\u56fe\u50cf\u63d0\u53d6\u6587\u5b57\uff0c :return:\u76f8\u4f3c\u5ea6\uff0c\u5b8c\u5168\u76f8\u540c\u662f1\uff0c\u5b8c\u5168\u4e0d\u540c\u662f0\uff0c\u5176\u4ed6\u662f source_text \u4e0e\u8bc6\u522b\u51fa\u6765\u7684\u6587\u5b57\u7684\u6bd4\u4f8b \"\"\" if len ( source_text ) == 0 : '''\u5982\u679csource_text\u662f\u7a7a\u5b57\u7b26\uff0c\u5c31\u8ba4\u4e3a\u6c38\u8fdc\u80fd\u8bc6\u522b\u4e0d\u51fa\u6765''' return 0 , None cv_image = ActionImage . pil_to_cv ( target_pillow_image ) ActionImage . log_image ( 'target' , cv_image , debug = self . debug ) text_from_image = ActionImage . ocr ( cv_image ) if self . debug : print ( 'ocr result: {} ' . format ( text_from_image )) if source_text in text_from_image : return len ( source_text ) / len ( text_from_image ), text_from_image else : return 0 , None","title":"text_similar()"},{"location":"api_reference/#autopy.core.detection.WindowDetection","text":"","title":"WindowDetection"},{"location":"api_reference/#autopy.core.detection.WindowDetection.WindowDetection","text":"\u7a97\u53e3\u68c0\u6d4b\uff0c\u68c0\u6d4b\u5728\u5f53\u524d\u73af\u5883\u4e2d\uff0c\u662f\u5426\u6709\u6307\u5b9a\u7684\u7a97\u53e3\u3002 \u5982\u679ccurrent_only\u8bbe\u7f6e\u4e3aTrue\uff08\u7f3a\u7701\u503c\uff09\uff0c\u90a3\u4e48\u53ea\u68c0\u6d4b\u5f53\u524d\u7a97\u53e3\u662f\u5426\u7b26\u5408title\u6216\u8005win_class\u914d\u7f6e\uff1b \u5982\u679ccurrent_only\u8bbe\u7f6e\u4e3aFalse\uff0c\u90a3\u4e48\u5c31\u5728\u6574\u4e2a\u684c\u9762\u4e2d\u5bfb\u627e\u6307\u5b9atitle\u6216\u8005win_class\u7684\u7a97\u53e3\u3002 \u5982\u679c\u7ed3\u679c\u627e\u5230\u4e86\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2aWindowResult\u5bf9\u8c61\uff0c\u91cc\u9762\u542b\u6709\u4e00\u4e2ahwnd\u5c5e\u6027\uff0c\u4fdd\u5b58\u4e86\u7a97\u53e3\u53e5\u67c4\uff1b \u5982\u679c\u7ed3\u679c\u6ca1\u5230\u5230\uff0c\u5219\u8fd4\u56deNone Examples: # State\u7684\u4e00\u4e2a\u5c5e\u6027 find: window: title: \u9489\u9489 debug: True fail_action: raise_error('\u6ca1\u6709\u627e\u5230\u9489\u9489\u7a97\u53e3') \u6216\u8005 # State\u7684\u4e00\u4e2a\u5c5e\u6027 check: - window: win_class: StandardFrame_DingTalk debug: True fail_action: locate_state('\u6ca1\u6709\u627e\u5230\u9489\u9489\u7a97\u53e3') Attributes: Name Type Description current_only bool \u662f\u5426\u53ea\u68c0\u6d4b\u5f53\u524d\u7a97\u53e3\uff0c\u7f3a\u7701\u4e3aTrue\uff1b\u5982\u679c\u8bbe\u7f6e\u4e3aFalse\uff0c\u5219\u4f1a\u5728\u684c\u9762\u6240\u6709\u6253\u5f00\u7684\u7a97\u53e3\u4e2d\u67e5\u627e win_class str \u7a97\u53e3\u7684win_class\uff0c\u53ef\u7528spy++\u7b49\u5de5\u5177\u67e5\u770b title str \u7a97\u53e3\u6807\u9898\uff0c\u901a\u5e38\u662f\u663e\u793a\u5728\u4efb\u52a1\u680f\u4e0a\u7684\u6587\u5b57 result: \u5982\u679c\u627e\u5230\u4e86\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2aWindowResult\u5bf9\u8c61\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u8fd4\u56deNone","title":"WindowDetection"},{"location":"api_reference/#autopy.core.detection.WindowDetection.WindowResult","text":"WindowDetection\u7684\u8fd4\u56de\u503c\u5bf9\u8c61 Attributes: Name Type Description hwnd int \u7a97\u53e3\u53e5\u67c4","title":"WindowResult"},{"location":"api_reference/#autopy.main","text":"\u7a0b\u5e8f\u542f\u52a8\u5165\u53e3\u3002\u542f\u52a8\u540e\uff0c\u7a0b\u5e8f\u5c06\u6309\u7167-project(-p)\u53c2\u6570\u6307\u5b9a\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6267\u884c\u81ea\u52a8\u5316\u9879\u76ee Examples: python autopy -p ./conf/auto_dingding.yaml","title":"main"}]}